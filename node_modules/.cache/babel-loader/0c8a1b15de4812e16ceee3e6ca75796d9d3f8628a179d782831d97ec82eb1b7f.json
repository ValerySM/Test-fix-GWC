{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import'./EatsApp.css';import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import UpgradeTab from'./components/UpgradeTab';import BoostTab from'./components/BoostTab';import TasksTab from'./components/TasksTab';import SettingsButton from'./components/SettingsButton';import clickerImage from'../public/clicker-image.png';import SoonTab from'./components/SoonTab';import UniverseData from'./UniverseData';import{handleClick,handleDamageUpgrade,handleEnergyUpgrade,handleRegenUpgrade}from'./scripts/functions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DamageIndicator=_ref=>{let{x,y,damage}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"damage-indicator\",style:{left:x,top:y},children:damage});};function EatsApp(_ref2){let{setIsTabOpen}=_ref2;const currentUniverse=UniverseData.getCurrentUniverse();const[totalClicks,setTotalClicks]=useState(UniverseData.getTotalClicks());const[count,setCount]=useState(0);const[activeTab,setActiveTab]=useState(null);const[isImageDistorted,setIsImageDistorted]=useState(false);const[isTabOpenState,setIsTabOpenState]=useState(false);const[showButtons,setShowButtons]=useState(true);const[damageIndicators,setDamageIndicators]=useState([]);const[energy,setEnergy]=useState(()=>{const savedEnergy=UniverseData.getUniverseData(currentUniverse,'energy',1000);const lastUpdate=UniverseData.getUniverseData(currentUniverse,'lastUpdate',Date.now());const energyMax=UniverseData.getUniverseData(currentUniverse,'energyMax',1000);const regenRate=UniverseData.getUniverseData(currentUniverse,'regenRate',1);const now=Date.now();const elapsedSeconds=Math.floor((now-lastUpdate)/1000);const regenAmount=Math.min(elapsedSeconds*regenRate,energyMax-savedEnergy);return Math.min(savedEnergy+regenAmount,energyMax);});const[energyMax,setEnergyMax]=useState(()=>UniverseData.getUniverseData(currentUniverse,'energyMax',1000));const[regenRate,setRegenRate]=useState(()=>UniverseData.getUniverseData(currentUniverse,'regenRate',1));const[damageLevel,setDamageLevel]=useState(()=>UniverseData.getUniverseData(currentUniverse,'damageLevel',1));const[energyLevel,setEnergyLevel]=useState(()=>UniverseData.getUniverseData(currentUniverse,'energyLevel',1));const[regenLevel,setRegenLevel]=useState(()=>UniverseData.getUniverseData(currentUniverse,'regenLevel',1));const damageUpgradeCost=1000*Math.pow(2,damageLevel-1);const energyUpgradeCost=1000*Math.pow(2,energyLevel-1);const regenUpgradeCost=50000*Math.pow(2,regenLevel-1);const activityTimeoutRef=useRef(null);const clickerRef=useRef(null);useEffect(()=>{const updateTotalClicks=newTotal=>{setTotalClicks(newTotal);};UniverseData.addListener(updateTotalClicks);return()=>{UniverseData.removeListener(updateTotalClicks);};},[]);useEffect(()=>{const savedData=localStorage.getItem('universeData');if(!savedData){UniverseData.resetToDefaults();setTotalClicks(100000);setEnergy(1000);setEnergyMax(1000);setRegenRate(1);setDamageLevel(1);setEnergyLevel(1);setRegenLevel(1);}},[]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'energy',energy);},[energy,currentUniverse]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'energyMax',energyMax);},[energyMax,currentUniverse]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'regenRate',regenRate);},[regenRate,currentUniverse]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'damageLevel',damageLevel);},[damageLevel,currentUniverse]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'energyLevel',energyLevel);},[energyLevel,currentUniverse]);useEffect(()=>{UniverseData.setUniverseData(currentUniverse,'regenLevel',regenLevel);},[regenLevel,currentUniverse]);useEffect(()=>{const interval=setInterval(()=>{setEnergy(prevEnergy=>{if(prevEnergy<energyMax){const newEnergy=Math.min(prevEnergy+regenRate,energyMax);UniverseData.setUniverseData(currentUniverse,'energy',newEnergy);UniverseData.setUniverseData(currentUniverse,'lastUpdate',Date.now());return newEnergy;}return prevEnergy;});},1000);return()=>{clearInterval(interval);UniverseData.setUniverseData(currentUniverse,'energy',energy);UniverseData.setUniverseData(currentUniverse,'lastUpdate',Date.now());};},[currentUniverse,energy,energyMax,regenRate]);const handleTabOpen=tab=>{setActiveTab(tab);setIsTabOpenState(true);setIsTabOpen(true);setShowButtons(false);};const handleBackButtonClick=()=>{setActiveTab(null);setIsTabOpenState(false);setIsTabOpen(false);setShowButtons(true);};const updateTotalClicks=additionalClicks=>{setTotalClicks(prevTotal=>{const newTotal=prevTotal+additionalClicks;UniverseData.setTotalClicks(newTotal);return newTotal;});};const handleInteraction=useCallback(e=>{e.preventDefault();setIsImageDistorted(true);const rect=clickerRef.current.getBoundingClientRect();const x=e.clientX||e.touches&&e.touches[0].clientX;const y=e.clientY||e.touches&&e.touches[0].clientY;const newIndicator={id:Date.now()+Math.random(),x:x-rect.left,y:y-rect.top,damage:damageLevel};setDamageIndicators(prev=>[...prev,newIndicator]);setTimeout(()=>{setDamageIndicators(prev=>prev.filter(indicator=>indicator.id!==newIndicator.id));},1000);handleClick(energy,damageLevel,count,totalClicks,setCount,updateTotalClicks,setEnergy,setIsImageDistorted,activityTimeoutRef,setRegenRate);if(activityTimeoutRef.current){clearTimeout(activityTimeoutRef.current);}activityTimeoutRef.current=setTimeout(()=>{setIsImageDistorted(false);},200);},[damageLevel,energy,count,totalClicks]);useEffect(()=>{const clicker=clickerRef.current;if(clicker){clicker.addEventListener('click',handleInteraction);clicker.addEventListener('touchstart',handleInteraction,{passive:false});return()=>{clicker.removeEventListener('click',handleInteraction);clicker.removeEventListener('touchstart',handleInteraction);};}},[handleInteraction]);const tabContent=(()=>{switch(activeTab){case'UPGRADE':return/*#__PURE__*/_jsx(UpgradeTab,{totalClicks:totalClicks,damageUpgradeCost:damageUpgradeCost,energyUpgradeCost:energyUpgradeCost,regenUpgradeCost:regenUpgradeCost,damageLevel:damageLevel,energyLevel:energyLevel,regenLevel:regenLevel,handleDamageUpgrade:()=>handleDamageUpgrade(totalClicks,damageUpgradeCost,updateTotalClicks,setDamageLevel,damageLevel),handleEnergyUpgrade:()=>handleEnergyUpgrade(totalClicks,energyUpgradeCost,updateTotalClicks,setEnergyMax,setEnergyLevel,energyMax,energyLevel),handleRegenUpgrade:()=>handleRegenUpgrade(totalClicks,regenUpgradeCost,updateTotalClicks,setRegenRate,setRegenLevel,regenRate,regenLevel)});case'BOOST':return/*#__PURE__*/_jsx(BoostTab,{updateTotalClicks:updateTotalClicks});case'TASKS':return/*#__PURE__*/_jsx(TasksTab,{});case'SOON':return/*#__PURE__*/_jsx(SoonTab,{});default:return null;}})();const remainingEnergyPercentage=(energyMax-energy)/energyMax*100;return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(SettingsButton,{isActive:activeTab!==null}),/*#__PURE__*/_jsxs(\"div\",{className:\"balance-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Balance Icon\",className:\"balance-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:totalClicks})]}),/*#__PURE__*/_jsx(\"div\",{className:\"energy-container\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Energy: \",Math.floor(energy),\"/\",energyMax]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"clicker-container\",ref:clickerRef,children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Clicker\",className:\"clicker-image \".concat(isImageDistorted?'distorted':'')}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-circle\",style:{boxShadow:'0px 0px 10px 5px gray'},children:/*#__PURE__*/_jsx(CircularProgressbar,{value:remainingEnergyPercentage,maxValue:100,styles:buildStyles({pathColor:'#b20bff',textColor:'#fff',trailColor:'#07ffff',backgroundColor:'#07ffff'})})}),damageIndicators.map(indicator=>/*#__PURE__*/_jsx(DamageIndicator,{x:indicator.x,y:indicator.y,damage:indicator.damage},indicator.id))]}),showButtons&&/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='UPGRADE'?'active':'',onClick:()=>handleTabOpen('UPGRADE'),children:\"UPGRADE\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='BOOST'?'active':'',onClick:()=>handleTabOpen('BOOST'),children:\"GAMES\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='TASKS'?'active':'',onClick:()=>handleTabOpen('TASKS'),children:\"TASKS\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='SOON'?'active':'',onClick:()=>handleTabOpen('SOON'),children:\"REF\"})]}),isTabOpenState&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content \".concat(isTabOpenState?'open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:handleBackButtonClick,children:\"Back\"}),tabContent]})]})});}export default EatsApp;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","CircularProgressbar","buildStyles","UpgradeTab","BoostTab","TasksTab","SettingsButton","clickerImage","SoonTab","UniverseData","handleClick","handleDamageUpgrade","handleEnergyUpgrade","handleRegenUpgrade","jsx","_jsx","jsxs","_jsxs","DamageIndicator","_ref","x","y","damage","className","style","left","top","children","EatsApp","_ref2","setIsTabOpen","currentUniverse","getCurrentUniverse","totalClicks","setTotalClicks","getTotalClicks","count","setCount","activeTab","setActiveTab","isImageDistorted","setIsImageDistorted","isTabOpenState","setIsTabOpenState","showButtons","setShowButtons","damageIndicators","setDamageIndicators","energy","setEnergy","savedEnergy","getUniverseData","lastUpdate","Date","now","energyMax","regenRate","elapsedSeconds","Math","floor","regenAmount","min","setEnergyMax","setRegenRate","damageLevel","setDamageLevel","energyLevel","setEnergyLevel","regenLevel","setRegenLevel","damageUpgradeCost","pow","energyUpgradeCost","regenUpgradeCost","activityTimeoutRef","clickerRef","updateTotalClicks","newTotal","addListener","removeListener","savedData","localStorage","getItem","resetToDefaults","setUniverseData","interval","setInterval","prevEnergy","newEnergy","clearInterval","handleTabOpen","tab","handleBackButtonClick","additionalClicks","prevTotal","handleInteraction","e","preventDefault","rect","current","getBoundingClientRect","clientX","touches","clientY","newIndicator","id","random","prev","setTimeout","filter","indicator","clearTimeout","clicker","addEventListener","passive","removeEventListener","tabContent","remainingEnergyPercentage","isActive","src","alt","ref","concat","boxShadow","value","maxValue","styles","pathColor","textColor","trailColor","backgroundColor","map","onClick"],"sources":["C:/Users/valery-sm/Test-fix-GWC/src/Universes/EWI/src/EatsApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png'\nimport SoonTab from './components/SoonTab'\nimport UniverseData from './UniverseData';\n\nimport {\n  handleClick,\n  handleDamageUpgrade,\n  handleEnergyUpgrade,\n  handleRegenUpgrade\n} from './scripts/functions';\n\nconst DamageIndicator = ({ x, y, damage }) => (\n  <div className=\"damage-indicator\" style={{ left: x, top: y }}>\n    {damage}\n  </div>\n);\n\nfunction EatsApp({ setIsTabOpen }) {\n  const currentUniverse = UniverseData.getCurrentUniverse();\n\n  const [totalClicks, setTotalClicks] = useState(UniverseData.getTotalClicks());\n  const [count, setCount] = useState(0);\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [isTabOpenState, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n  const [damageIndicators, setDamageIndicators] = useState([]);\n\n  const [energy, setEnergy] = useState(() => {\n    const savedEnergy = UniverseData.getUniverseData(currentUniverse, 'energy', 1000);\n    const lastUpdate = UniverseData.getUniverseData(currentUniverse, 'lastUpdate', Date.now());\n    const energyMax = UniverseData.getUniverseData(currentUniverse, 'energyMax', 1000);\n    const regenRate = UniverseData.getUniverseData(currentUniverse, 'regenRate', 1);\n\n    const now = Date.now();\n    const elapsedSeconds = Math.floor((now - lastUpdate) / 1000);\n    const regenAmount = Math.min(elapsedSeconds * regenRate, energyMax - savedEnergy);\n    \n    return Math.min(savedEnergy + regenAmount, energyMax);\n  });\n\n  const [energyMax, setEnergyMax] = useState(() => \n    UniverseData.getUniverseData(currentUniverse, 'energyMax', 1000)\n  );\n  const [regenRate, setRegenRate] = useState(() => \n    UniverseData.getUniverseData(currentUniverse, 'regenRate', 1)\n  );\n\n  const [damageLevel, setDamageLevel] = useState(() => \n    UniverseData.getUniverseData(currentUniverse, 'damageLevel', 1)\n  );\n  const [energyLevel, setEnergyLevel] = useState(() => \n    UniverseData.getUniverseData(currentUniverse, 'energyLevel', 1)\n  );\n  const [regenLevel, setRegenLevel] = useState(() => \n    UniverseData.getUniverseData(currentUniverse, 'regenLevel', 1)\n  );\n\n  const damageUpgradeCost = 1000 * Math.pow(2, damageLevel - 1);\n  const energyUpgradeCost = 1000 * Math.pow(2, energyLevel - 1);\n  const regenUpgradeCost = 50000 * Math.pow(2, regenLevel - 1);\n\n  const activityTimeoutRef = useRef(null);\n  const clickerRef = useRef(null);\n\n  useEffect(() => {\n    const updateTotalClicks = (newTotal) => {\n      setTotalClicks(newTotal);\n    };\n\n    UniverseData.addListener(updateTotalClicks);\n\n    return () => {\n      UniverseData.removeListener(updateTotalClicks);\n    };\n  }, []);\n\n  useEffect(() => {\n    const savedData = localStorage.getItem('universeData');\n    if (!savedData) {\n      UniverseData.resetToDefaults();\n      setTotalClicks(100000);\n      setEnergy(1000);\n      setEnergyMax(1000);\n      setRegenRate(1);\n      setDamageLevel(1);\n      setEnergyLevel(1);\n      setRegenLevel(1);\n    }\n  }, []);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'energy', energy);\n  }, [energy, currentUniverse]);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'energyMax', energyMax);\n  }, [energyMax, currentUniverse]);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'regenRate', regenRate);\n  }, [regenRate, currentUniverse]);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'damageLevel', damageLevel);\n  }, [damageLevel, currentUniverse]);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'energyLevel', energyLevel);\n  }, [energyLevel, currentUniverse]);\n\n  useEffect(() => {\n    UniverseData.setUniverseData(currentUniverse, 'regenLevel', regenLevel);\n  }, [regenLevel, currentUniverse]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setEnergy(prevEnergy => {\n        if (prevEnergy < energyMax) {\n          const newEnergy = Math.min(prevEnergy + regenRate, energyMax);\n          UniverseData.setUniverseData(currentUniverse, 'energy', newEnergy);\n          UniverseData.setUniverseData(currentUniverse, 'lastUpdate', Date.now());\n          return newEnergy;\n        }\n        return prevEnergy;\n      });\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n      UniverseData.setUniverseData(currentUniverse, 'energy', energy);\n      UniverseData.setUniverseData(currentUniverse, 'lastUpdate', Date.now());\n    };\n  }, [currentUniverse, energy, energyMax, regenRate]);\n\n  const handleTabOpen = (tab) => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setIsTabOpen(true);\n    setShowButtons(false);\n  };\n\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setIsTabOpen(false);\n    setShowButtons(true);\n  };\n\n  const updateTotalClicks = (additionalClicks) => {\n    setTotalClicks(prevTotal => {\n      const newTotal = prevTotal + additionalClicks;\n      UniverseData.setTotalClicks(newTotal);\n      return newTotal;\n    });\n  };\n\n  const handleInteraction = useCallback((e) => {\n    e.preventDefault();\n    setIsImageDistorted(true);\n\n    const rect = clickerRef.current.getBoundingClientRect();\n    const x = e.clientX || (e.touches && e.touches[0].clientX);\n    const y = e.clientY || (e.touches && e.touches[0].clientY);\n\n    const newIndicator = {\n      id: Date.now() + Math.random(),\n      x: x - rect.left,\n      y: y - rect.top,\n      damage: damageLevel\n    };\n\n    setDamageIndicators(prev => [...prev, newIndicator]);\n\n    setTimeout(() => {\n      setDamageIndicators(prev => prev.filter(indicator => indicator.id !== newIndicator.id));\n    }, 1000);\n\n    handleClick(energy, damageLevel, count, totalClicks, setCount, updateTotalClicks, setEnergy, setIsImageDistorted, activityTimeoutRef, setRegenRate);\n\n    if (activityTimeoutRef.current) {\n      clearTimeout(activityTimeoutRef.current);\n    }\n    \n    activityTimeoutRef.current = setTimeout(() => {\n      setIsImageDistorted(false);\n    }, 200);\n  }, [damageLevel, energy, count, totalClicks]);\n\n  useEffect(() => {\n    const clicker = clickerRef.current;\n    if (clicker) {\n      clicker.addEventListener('click', handleInteraction);\n      clicker.addEventListener('touchstart', handleInteraction, { passive: false });\n      \n      return () => {\n        clicker.removeEventListener('click', handleInteraction);\n        clicker.removeEventListener('touchstart', handleInteraction);\n      };\n    }\n  }, [handleInteraction]);\n\n  const tabContent = (() => {\n    switch (activeTab) {\n      case 'UPGRADE':\n        return (\n          <UpgradeTab\n            totalClicks={totalClicks}\n            damageUpgradeCost={damageUpgradeCost}\n            energyUpgradeCost={energyUpgradeCost}\n            regenUpgradeCost={regenUpgradeCost}\n            damageLevel={damageLevel}\n            energyLevel={energyLevel}\n            regenLevel={regenLevel}\n            handleDamageUpgrade={() => handleDamageUpgrade(totalClicks, damageUpgradeCost, updateTotalClicks, setDamageLevel, damageLevel)}\n            handleEnergyUpgrade={() => handleEnergyUpgrade(totalClicks, energyUpgradeCost, updateTotalClicks, setEnergyMax, setEnergyLevel, energyMax, energyLevel)}\n            handleRegenUpgrade={() => handleRegenUpgrade(totalClicks, regenUpgradeCost, updateTotalClicks, setRegenRate, setRegenLevel, regenRate, regenLevel)}\n          />\n        );\n      case 'BOOST':\n        return <BoostTab updateTotalClicks={updateTotalClicks} />;\n      case 'TASKS':\n        return <TasksTab />;\n      case 'SOON':\n        return <SoonTab />;\n      default:\n        return null;\n    }\n  })();\n\n  const remainingEnergyPercentage = ((energyMax - energy) / energyMax) * 100;\n\n  return (\n    <div className={`App`}>\n      <header className=\"App-header\">\n        <SettingsButton isActive={activeTab !== null} /> \n        <div className=\"balance-container\">\n          <img src={clickerImage} alt=\"Balance Icon\" className=\"balance-icon\" />\n          <p>{totalClicks}</p>\n        </div>\n        <div className=\"energy-container\">\n          <p>Energy: {Math.floor(energy)}/{energyMax}</p>\n        </div>\n        <div className=\"clicker-container\"\n             ref={clickerRef}>\n          <img src={clickerImage} alt=\"Clicker\" className={`clicker-image ${isImageDistorted ? 'distorted' : ''}`} />\n          <div className=\"progress-circle\" style={{ boxShadow: '0px 0px 10px 5px gray' }}>\n            <CircularProgressbar\n              value={remainingEnergyPercentage}\n              maxValue={100}\n              styles={buildStyles({\n                pathColor: '#b20bff',\n                textColor: '#fff',\n                trailColor: '#07ffff',\n                backgroundColor: '#07ffff',\n              })}\n            />\n          </div>\n          {damageIndicators.map(indicator => (\n            <DamageIndicator key={indicator.id} x={indicator.x} y={indicator.y} damage={indicator.damage} />\n          ))}\n        </div>\n        {showButtons && (\n          <div className=\"tabs\">\n            <button className={activeTab === 'UPGRADE' ? 'active' : ''} onClick={() => handleTabOpen('UPGRADE')}>\n              UPGRADE\n            </button>\n            <button className={activeTab === 'BOOST' ? 'active' : ''} onClick={() => handleTabOpen('BOOST')}>\n              GAMES\n            </button>\n            <button className={activeTab === 'TASKS' ? 'active' : ''} onClick={() => handleTabOpen('TASKS')}>\n              TASKS\n            </button>\n            <button className={activeTab === 'SOON' ? 'active' : ''} onClick={() => handleTabOpen('SOON')}>\n              REF\n            </button>\n          </div>\n        )}\n        {isTabOpenState && (\n          <div className={`tab-content ${isTabOpenState ? 'open' : ''}`}>\n            <button className=\"back-button\" onClick={handleBackButtonClick}>Back</button>\n            {tabContent}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default EatsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}