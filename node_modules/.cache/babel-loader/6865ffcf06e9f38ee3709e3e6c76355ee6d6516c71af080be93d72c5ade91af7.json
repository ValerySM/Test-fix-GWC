{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./PurblePairs.css';import backgroundMusicFile from'./audio/pokemonGym.mp3';import winEffectFile from'./audio/win.mp3';import startButtonSound from'./audio/start.mp3';import cardClickSound from'./audio/card.mp3';import UniverseData from'../../UniverseData';// Импортируем изображения\nimport img1 from'./img/1.png';import img2 from'./img/2.png';import img3 from'./img/3.png';import img4 from'./img/4.png';import img5 from'./img/5.png';import img6 from'./img/6.png';import img7 from'./img/7.png';import img8 from'./img/8.png';// Базовая коллекция карт\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const baseCollection=[{id:1,art:img1},{id:2,art:img2},{id:3,art:img3},{id:4,art:img4},{id:5,art:img5},{id:6,art:img6},{id:7,art:img7},{id:8,art:img8}];const shuffleArray=array=>array.sort(()=>Math.random()-0.5);const MessageBox=_ref=>{let{message,onClose}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"message-box\",children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"\\u041E\\u041A\"})]});};const PurblePairs=_ref2=>{let{onGameEnd}=_ref2;const[cards,setCards]=useState([]);const[flippedCards,setFlippedCards]=useState([]);const[matchedPairs,setMatchedPairs]=useState([]);const[isWin,setIsWin]=useState(false);const[isGameStarted,setIsGameStarted]=useState(false);const[timer,setTimer]=useState(60);const[showMessage,setShowMessage]=useState(false);const[messageText,setMessageText]=useState('');const[score,setScore]=useState(0);const[startTime,setStartTime]=useState(null);useEffect(()=>{const doubledCards=shuffleArray([...baseCollection,...baseCollection].map(card=>({...card,isFlipped:false,isMatched:false})));setCards(doubledCards);},[]);useEffect(()=>{let interval;if(isGameStarted&&timer>0){interval=setInterval(()=>{setTimer(prev=>prev-1);},1000);}else if(timer===0&&isGameStarted){setIsGameStarted(false);setMessageText(\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0448\\u043B\\u043E! \\u0412\\u044B \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438. \\u0412\\u0430\\u0448 \\u0441\\u0447\\u0435\\u0442: \".concat(score));setShowMessage(true);}return()=>clearInterval(interval);},[isGameStarted,timer,score]);useEffect(()=>{const audio=new Audio(backgroundMusicFile);audio.loop=true;const playAudio=()=>{audio.play().catch(error=>console.error('Ошибка при воспроизведении фоновой музыки:',error));};playAudio();const handleVisibilityChange=()=>{if(document.visibilityState==='hidden'){audio.pause();}else{playAudio();}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{audio.pause();document.removeEventListener('visibilitychange',handleVisibilityChange);};},[]);useEffect(()=>{if(matchedPairs.length===baseCollection.length&&isGameStarted){const endTime=Date.now();const timeTaken=(endTime-startTime)/1000;const speedBonus=Math.max(0,Math.floor((60-timeTaken)*2));const victoryBonus=100;const finalScore=score+speedBonus+victoryBonus;setScore(finalScore);setIsWin(true);setIsGameStarted(false);setMessageText(\"\\u041F\\u043E\\u0437\\u0434\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u043C! \\u0412\\u044B \\u043F\\u043E\\u0431\\u0435\\u0434\\u0438\\u043B\\u0438! \\u0412\\u0430\\u0448 \\u0444\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u0447\\u0435\\u0442: \".concat(finalScore));setShowMessage(true);new Audio(winEffectFile).play();// Обновляем глобальный счет\nUniverseData.addGameScore('purblePairs',finalScore);console.log('Updated PurblePairs score:',finalScore);console.log('New total clicks:',UniverseData.getTotalClicks());}},[matchedPairs,score,startTime,isGameStarted]);const playSound=soundFile=>{const audio=new Audio(soundFile);audio.play().catch(error=>console.error('Ошибка при воспроизведении звука:',error));};const resetGame=()=>{setIsWin(false);setIsGameStarted(false);setTimer(60);setScore(0);setMatchedPairs([]);setFlippedCards([]);setShowMessage(false);setCards(shuffleArray([...baseCollection,...baseCollection].map(card=>({...card,isFlipped:false,isMatched:false}))));};const startGame=()=>{playSound(startButtonSound);resetGame();setIsGameStarted(true);setStartTime(Date.now());};const handleCardClick=index=>{if(!isGameStarted||cards[index].isFlipped||cards[index].isMatched)return;playSound(cardClickSound);const newCards=[...cards];newCards[index].isFlipped=true;setCards(newCards);const newFlippedCards=[...flippedCards,index];setFlippedCards(newFlippedCards);if(newFlippedCards.length===2){const[firstIndex,secondIndex]=newFlippedCards;if(newCards[firstIndex].id===newCards[secondIndex].id){newCards[firstIndex].isMatched=true;newCards[secondIndex].isMatched=true;setMatchedPairs([...matchedPairs,newCards[firstIndex].id]);setScore(prevScore=>prevScore+10);}else{setTimeout(()=>{newCards[firstIndex].isFlipped=false;newCards[secondIndex].isFlipped=false;setCards(newCards);},800);}setFlippedCards([]);}};const handleMessageClose=()=>{setShowMessage(false);if(typeof onGameEnd==='function'){onGameEnd(score,isWin);}else{resetGame();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"purble-pairs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"\\u0412\\u0440\\u0435\\u043C\\u044F:\",/*#__PURE__*/_jsx(\"p\",{className:\"timerBtn\",children:timer})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[\"\\u0421\\u0447\\u0451\\u0442:\",/*#__PURE__*/_jsx(\"p\",{className:\"scoreBtn\",children:score})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-game\",onClick:startGame,children:\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cards\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards-grid\",children:cards.map((card,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card \".concat(card.isFlipped?'flipped':'',\" \").concat(card.isMatched?'matched':''),onClick:()=>handleCardClick(index),children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-front\",children:/*#__PURE__*/_jsx(\"img\",{className:\"card-img\",src:card.art,alt:\"\\u041A\\u0430\\u0440\\u0442\\u0430 \".concat(card.id)})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-back\",children:/*#__PURE__*/_jsx(\"span\",{className:\"back-descr\",children:\"Open\"})})]},index))})}),showMessage&&/*#__PURE__*/_jsx(MessageBox,{message:messageText,onClose:handleMessageClose})]});};export default PurblePairs;","map":{"version":3,"names":["React","useState","useEffect","backgroundMusicFile","winEffectFile","startButtonSound","cardClickSound","UniverseData","img1","img2","img3","img4","img5","img6","img7","img8","jsx","_jsx","jsxs","_jsxs","baseCollection","id","art","shuffleArray","array","sort","Math","random","MessageBox","_ref","message","onClose","className","children","onClick","PurblePairs","_ref2","onGameEnd","cards","setCards","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","isWin","setIsWin","isGameStarted","setIsGameStarted","timer","setTimer","showMessage","setShowMessage","messageText","setMessageText","score","setScore","startTime","setStartTime","doubledCards","map","card","isFlipped","isMatched","interval","setInterval","prev","concat","clearInterval","audio","Audio","loop","playAudio","play","catch","error","console","handleVisibilityChange","document","visibilityState","pause","addEventListener","removeEventListener","length","endTime","Date","now","timeTaken","speedBonus","max","floor","victoryBonus","finalScore","addGameScore","log","getTotalClicks","playSound","soundFile","resetGame","startGame","handleCardClick","index","newCards","newFlippedCards","firstIndex","secondIndex","prevScore","setTimeout","handleMessageClose","src","alt"],"sources":["C:/Users/valery-sm/Test-fix-GWC/src/Universes/EWI/src/games/purble-game/PurblePairs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PurblePairs.css';\r\nimport backgroundMusicFile from './audio/pokemonGym.mp3';\r\nimport winEffectFile from './audio/win.mp3';\r\nimport startButtonSound from './audio/start.mp3';\r\nimport cardClickSound from './audio/card.mp3';\r\nimport UniverseData from '../../UniverseData';\r\n\r\n\r\n\r\n\r\n// Импортируем изображения\r\nimport img1 from './img/1.png';\r\nimport img2 from './img/2.png';\r\nimport img3 from './img/3.png';\r\nimport img4 from './img/4.png';\r\nimport img5 from './img/5.png';\r\nimport img6 from './img/6.png';\r\nimport img7 from './img/7.png';\r\nimport img8 from './img/8.png';\r\n\r\n// Базовая коллекция карт\r\nconst baseCollection = [\r\n    { id: 1, art: img1 },\r\n    { id: 2, art: img2 },\r\n    { id: 3, art: img3 },\r\n    { id: 4, art: img4 },\r\n    { id: 5, art: img5 },\r\n    { id: 6, art: img6 },\r\n    { id: 7, art: img7 },\r\n    { id: 8, art: img8 },\r\n];\r\n\r\nconst shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\nconst MessageBox = ({ message, onClose }) => (\r\n  <div className=\"message-box\">\r\n    <p>{message}</p>\r\n    <button onClick={onClose}>ОК</button>\r\n  </div>\r\n);\r\n\r\nconst PurblePairs = ({ onGameEnd }) => {\r\n    const [cards, setCards] = useState([]);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedPairs, setMatchedPairs] = useState([]);\r\n    const [isWin, setIsWin] = useState(false);\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    const [timer, setTimer] = useState(60);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [messageText, setMessageText] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [startTime, setStartTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const doubledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        })));\r\n        setCards(doubledCards);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isGameStarted && timer > 0) {\r\n            interval = setInterval(() => {\r\n                setTimer(prev => prev - 1);\r\n            }, 1000);\r\n        } else if (timer === 0 && isGameStarted) {\r\n            setIsGameStarted(false);\r\n            setMessageText(`Время вышло! Вы проиграли. Ваш счет: ${score}`);\r\n            setShowMessage(true);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isGameStarted, timer, score]);\r\n\r\n    useEffect(() => {\r\n        const audio = new Audio(backgroundMusicFile);\r\n        audio.loop = true;\r\n\r\n        const playAudio = () => {\r\n            audio.play().catch(error => console.error('Ошибка при воспроизведении фоновой музыки:', error));\r\n        };\r\n\r\n        playAudio();\r\n\r\n        const handleVisibilityChange = () => {\r\n            if (document.visibilityState === 'hidden') {\r\n                audio.pause();\r\n            } else {\r\n                playAudio();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('visibilitychange', handleVisibilityChange);\r\n\r\n        return () => {\r\n            audio.pause();\r\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (matchedPairs.length === baseCollection.length && isGameStarted) {\r\n            const endTime = Date.now();\r\n            const timeTaken = (endTime - startTime) / 1000;\r\n            const speedBonus = Math.max(0, Math.floor((60 - timeTaken) * 2));\r\n            const victoryBonus = 100;\r\n\r\n            const finalScore = score + speedBonus + victoryBonus;\r\n\r\n            setScore(finalScore);\r\n            setIsWin(true);\r\n            setIsGameStarted(false);\r\n            setMessageText(`Поздравляем! Вы победили! Ваш финальный счет: ${finalScore}`);\r\n            setShowMessage(true);\r\n            new Audio(winEffectFile).play();\r\n            \r\n            // Обновляем глобальный счет\r\n            UniverseData.addGameScore('purblePairs', finalScore);\r\n            console.log('Updated PurblePairs score:', finalScore);\r\n            console.log('New total clicks:', UniverseData.getTotalClicks());\r\n        }\r\n    }, [matchedPairs, score, startTime, isGameStarted]);\r\n\r\n    const playSound = (soundFile) => {\r\n        const audio = new Audio(soundFile);\r\n        audio.play().catch(error => console.error('Ошибка при воспроизведении звука:', error));\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setIsWin(false);\r\n        setIsGameStarted(false);\r\n        setTimer(60);\r\n        setScore(0);\r\n        setMatchedPairs([]);\r\n        setFlippedCards([]);\r\n        setShowMessage(false);\r\n        setCards(shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        }))));\r\n    };\r\n\r\n    const startGame = () => {\r\n        playSound(startButtonSound);\r\n        resetGame();\r\n        setIsGameStarted(true);\r\n        setStartTime(Date.now());\r\n    };\r\n\r\n    const handleCardClick = (index) => {\r\n        if (!isGameStarted || cards[index].isFlipped || cards[index].isMatched) return;\r\n\r\n        playSound(cardClickSound);\r\n\r\n        const newCards = [...cards];\r\n        newCards[index].isFlipped = true;\r\n        setCards(newCards);\r\n\r\n        const newFlippedCards = [...flippedCards, index];\r\n        setFlippedCards(newFlippedCards);\r\n\r\n        if (newFlippedCards.length === 2) {\r\n            const [firstIndex, secondIndex] = newFlippedCards;\r\n            if (newCards[firstIndex].id === newCards[secondIndex].id) {\r\n                newCards[firstIndex].isMatched = true;\r\n                newCards[secondIndex].isMatched = true;\r\n                setMatchedPairs([...matchedPairs, newCards[firstIndex].id]);\r\n                setScore(prevScore => prevScore + 10);\r\n            } else {\r\n                setTimeout(() => {\r\n                    newCards[firstIndex].isFlipped = false;\r\n                    newCards[secondIndex].isFlipped = false;\r\n                    setCards(newCards);\r\n                }, 800);\r\n            }\r\n            setFlippedCards([]);\r\n        }\r\n    };\r\n\r\n    const handleMessageClose = () => {\r\n        setShowMessage(false);\r\n        if (typeof onGameEnd === 'function') {\r\n            onGameEnd(score, isWin);\r\n        } else {\r\n            resetGame();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"purble-pairs\">\r\n            <div className=\"game-header\">\r\n                <div className=\"timer\">Время:<p className='timerBtn'>{timer}</p></div>\r\n                <div className='score'>Счёт:<p className='scoreBtn'>{score}</p></div>\r\n            </div>\r\n            <button className='btn-game' onClick={startGame}>Начать</button>\r\n            <div className=\"cards\">\r\n                <div className='cards-grid'>\r\n                    {cards.map((card, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`}\r\n                            onClick={() => handleCardClick(index)}\r\n                        >\r\n                            <div className=\"card-front\">\r\n                                <img className='card-img' src={card.art} alt={`Карта ${card.id}`} />\r\n                            </div>\r\n                            <div className=\"card-back\">\r\n                                <span className='back-descr'>Open</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {showMessage && <MessageBox message={messageText} onClose={handleMessageClose} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PurblePairs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}