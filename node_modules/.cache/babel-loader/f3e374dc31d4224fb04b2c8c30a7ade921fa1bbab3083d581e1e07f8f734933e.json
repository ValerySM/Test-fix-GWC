{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\EatsApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png';\nimport SoonTab from './components/SoonTab';\nimport GlobalScore from './GlobalScore'; // Импортируем GlobalScore\nimport { handleClick, handleDamageUpgrade, handleEnergyUpgrade, handleRegenUpgrade, handleMouseDown, handleMouseUp } from './scripts/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EatsApp({\n  setIsTabOpen\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  const [globalScore, setGlobalScore] = GlobalScore.useGlobalScore(); // Используем хук GlobalScore\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [pointsPerClick, setPointsPerClick] = useState(1);\n  const [isClicking, setIsClicking] = useState(false);\n  const [isTabOpen, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n\n  // ... (остальные состояния остаются без изменений)\n\n  useEffect(() => {\n    localStorage.setItem('totalClicks', JSON.stringify(globalScore));\n  }, [globalScore]);\n\n  // ... (остальные useEffect остаются без изменений)\n\n  const handleTabOpen = tab => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setIsTabOpen(true);\n    setShowButtons(false);\n  };\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setIsTabOpen(false);\n    setShowButtons(true);\n  };\n  const handleGameEnd = (gameType, score) => {\n    setGlobalScore(gameType, score); // Обновляем глобальный счет после игры\n  };\n  const tabContent = (() => {\n    switch (activeTab) {\n      case 'UPGRADE':\n        return /*#__PURE__*/_jsxDEV(UpgradeTab, {\n          totalClicks: globalScore // Используем globalScore вместо totalClicks\n          ,\n          damageUpgradeCost: damageUpgradeCost,\n          energyUpgradeCost: energyUpgradeCost,\n          regenUpgradeCost: regenUpgradeCost,\n          damageLevel: damageLevel,\n          energyLevel: energyLevel,\n          regenLevel: regenLevel,\n          handleDamageUpgrade: () => handleDamageUpgrade(globalScore, damageUpgradeCost, setGlobalScore, setPointsPerClick, setDamageLevel, pointsPerClick, damageLevel),\n          handleEnergyUpgrade: () => handleEnergyUpgrade(globalScore, energyUpgradeCost, setGlobalScore, setEnergyMax, setEnergyLevel, energyMax, energyLevel),\n          handleRegenUpgrade: () => handleRegenUpgrade(globalScore, regenUpgradeCost, setGlobalScore, setRegenRate, setRegenLevel, regenRate, regenLevel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      case 'BOOST':\n        return /*#__PURE__*/_jsxDEV(BoostTab, {\n          onGameEnd: handleGameEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n      // Передаем функцию handleGameEnd\n      case 'TASKS':\n        return /*#__PURE__*/_jsxDEV(TasksTab, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this);\n      case 'SOON':\n        return /*#__PURE__*/_jsxDEV(SoonTab, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  })();\n  const remainingEnergyPercentage = (energyMax - energy) / energyMax * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App`,\n    onMouseDown: () => handleMouseDown(setIsClicking),\n    onMouseUp: () => handleMouseUp(setIsClicking, activityTimeoutRef, setIsImageDistorted, isClicking),\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: clickerImage,\n          alt: \"Balance Icon\",\n          className: \"balance-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: globalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clicker-container\",\n        onClick: () => handleClick(energy, damageLevel, count, globalScore, pointsPerClick, setCount, setGlobalScore, setEnergy, setIsImageDistorted, activityTimeoutRef, setRegenRate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(EatsApp, \"1eENr+B9gDA/zXX3ybb9AqEqcGo=\", false, function () {\n  return [GlobalScore.useGlobalScore];\n});\n_c = EatsApp;\nexport default EatsApp;\nvar _c;\n$RefreshReg$(_c, \"EatsApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CircularProgressbar","buildStyles","UpgradeTab","BoostTab","TasksTab","SettingsButton","clickerImage","SoonTab","GlobalScore","handleClick","handleDamageUpgrade","handleEnergyUpgrade","handleRegenUpgrade","handleMouseDown","handleMouseUp","jsxDEV","_jsxDEV","EatsApp","setIsTabOpen","_s","count","setCount","globalScore","setGlobalScore","useGlobalScore","activeTab","setActiveTab","isImageDistorted","setIsImageDistorted","pointsPerClick","setPointsPerClick","isClicking","setIsClicking","isTabOpen","setIsTabOpenState","showButtons","setShowButtons","localStorage","setItem","JSON","stringify","handleTabOpen","tab","handleBackButtonClick","handleGameEnd","gameType","score","tabContent","totalClicks","damageUpgradeCost","energyUpgradeCost","regenUpgradeCost","damageLevel","energyLevel","regenLevel","setDamageLevel","setEnergyMax","setEnergyLevel","energyMax","setRegenRate","setRegenLevel","regenRate","fileName","_jsxFileName","lineNumber","columnNumber","onGameEnd","remainingEnergyPercentage","energy","className","onMouseDown","onMouseUp","activityTimeoutRef","children","src","alt","onClick","setEnergy","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/EatsApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png'\nimport SoonTab from './components/SoonTab'\nimport GlobalScore from './GlobalScore';  // Импортируем GlobalScore\nimport {\n  handleClick,\n  handleDamageUpgrade,\n  handleEnergyUpgrade,\n  handleRegenUpgrade,\n  handleMouseDown,\n  handleMouseUp\n} from './scripts/functions';\n\nfunction EatsApp({ setIsTabOpen }) {\n  const [count, setCount] = useState(0);\n  const [globalScore, setGlobalScore] = GlobalScore.useGlobalScore();  // Используем хук GlobalScore\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [pointsPerClick, setPointsPerClick] = useState(1);\n  const [isClicking, setIsClicking] = useState(false);\n  const [isTabOpen, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n\n  // ... (остальные состояния остаются без изменений)\n\n  useEffect(() => {\n    localStorage.setItem('totalClicks', JSON.stringify(globalScore));\n  }, [globalScore]);\n\n  // ... (остальные useEffect остаются без изменений)\n\n  const handleTabOpen = (tab) => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setIsTabOpen(true);\n    setShowButtons(false);\n  };\n\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setIsTabOpen(false);\n    setShowButtons(true);\n  };\n\n  const handleGameEnd = (gameType, score) => {\n    setGlobalScore(gameType, score);  // Обновляем глобальный счет после игры\n  };\n\n  const tabContent = (() => {\n    switch (activeTab) {\n      case 'UPGRADE':\n        return (\n          <UpgradeTab\n            totalClicks={globalScore}  // Используем globalScore вместо totalClicks\n            damageUpgradeCost={damageUpgradeCost}\n            energyUpgradeCost={energyUpgradeCost}\n            regenUpgradeCost={regenUpgradeCost}\n            damageLevel={damageLevel}\n            energyLevel={energyLevel}\n            regenLevel={regenLevel}\n            handleDamageUpgrade={() => handleDamageUpgrade(globalScore, damageUpgradeCost, setGlobalScore, setPointsPerClick, setDamageLevel, pointsPerClick, damageLevel)}\n            handleEnergyUpgrade={() => handleEnergyUpgrade(globalScore, energyUpgradeCost, setGlobalScore, setEnergyMax, setEnergyLevel, energyMax, energyLevel)}\n            handleRegenUpgrade={() => handleRegenUpgrade(globalScore, regenUpgradeCost, setGlobalScore, setRegenRate, setRegenLevel, regenRate, regenLevel)}\n          />\n        );\n      case 'BOOST':\n        return <BoostTab onGameEnd={handleGameEnd} />;  // Передаем функцию handleGameEnd\n      case 'TASKS':\n        return <TasksTab />;\n      case 'SOON':\n        return <SoonTab />;\n      default:\n        return null;\n    }\n  })();\n\n  const remainingEnergyPercentage = ((energyMax - energy) / energyMax) * 100;\n\n  return (\n    <div className={`App`} onMouseDown={() => handleMouseDown(setIsClicking)} onMouseUp={() => handleMouseUp(setIsClicking, activityTimeoutRef, setIsImageDistorted, isClicking)}>\n      <header className=\"App-header\">\n        {/* ... (остальной JSX остается без изменений) */}\n        <div className=\"balance-container\">\n          <img src={clickerImage} alt=\"Balance Icon\" className=\"balance-icon\" />\n          <p>{globalScore}</p>  {/* Используем globalScore вместо totalClicks */}\n        </div>\n        {/* ... (остальной JSX остается без изменений) */}\n        <div className=\"clicker-container\" onClick={() => handleClick(energy, damageLevel, count, globalScore, pointsPerClick, setCount, setGlobalScore, setEnergy, setIsImageDistorted, activityTimeoutRef, setRegenRate)}>\n          {/* ... (содержимое clicker-container остается без изменений) */}\n        </div>\n        {/* ... (остальной JSX остается без изменений) */}\n      </header>\n    </div>\n  );\n}\n\nexport default EatsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}