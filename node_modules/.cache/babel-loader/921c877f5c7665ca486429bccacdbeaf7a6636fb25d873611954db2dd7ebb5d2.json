{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\games\\\\apple-game\\\\AppleCatcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport './AppleCatcher.css';\nimport goodAppleImg from './img/good-apple.png';\nimport rottenAppleImg from './img/rotten-apple.png';\nimport catcherImg from './img/catcher.png';\nimport backgroundMusic from './audio/background-music.mp3';\nimport buttonClickSound from './audio/button-click.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppleCatcher = ({\n  onGameOver\n}) => {\n  _s();\n  const [gameState, setGameState] = useState({\n    score: 0,\n    clickCount: 0,\n    time: 60,\n    apples: [],\n    playerPosition: 50,\n    gameStarted: false,\n    showResult: false\n  });\n  const [scoreAnimations, setScoreAnimations] = useState([]);\n  const backgroundMusicRef = useRef(new Audio(backgroundMusic));\n  const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\n  const gameLoopRef = useRef(null);\n  const lastUpdateTimeRef = useRef(0);\n  const checkCollisions = useCallback(() => {\n    setGameState(prevState => {\n      let newScore = prevState.score;\n      let newClickCount = prevState.clickCount;\n      const newApples = prevState.apples.filter(apple => {\n        if (apple.y > 70 && apple.y < 85 && Math.abs(apple.x - prevState.playerPosition) < 15) {\n          if (apple.type === 'good') {\n            newScore += 10;\n            newClickCount += 1; // Увеличиваем счетчик кликов только для хороших яблок\n          } else {\n            newScore -= 20;\n          }\n          const animationId = Date.now();\n          setScoreAnimations(prev => [...prev, {\n            id: animationId,\n            x: apple.x,\n            y: apple.y,\n            score: apple.type === 'good' ? 10 : -20\n          }]);\n          setTimeout(() => {\n            setScoreAnimations(prev => prev.filter(anim => anim.id !== animationId));\n          }, 1000);\n          return false;\n        }\n        return apple.y < 100;\n      });\n      return {\n        ...prevState,\n        apples: newApples,\n        score: newScore,\n        clickCount: newClickCount\n      };\n    });\n  }, []);\n  const gameLoop = useCallback(timestamp => {\n    if (timestamp - lastUpdateTimeRef.current > 16) {\n      // ~60 FPS\n      lastUpdateTimeRef.current = timestamp;\n      setGameState(prevState => {\n        if (!prevState.gameStarted) return prevState;\n        let newApples = prevState.apples.map(apple => ({\n          ...apple,\n          y: apple.y + 0.5\n        }));\n        if (Math.random() < 0.02 && newApples.length < 5) {\n          newApples.push({\n            id: Date.now(),\n            x: Math.random() * 100,\n            y: 0,\n            type: Math.random() > 0.2 ? 'good' : 'rotten'\n          });\n        }\n        newApples = newApples.filter(apple => apple.y < 100);\n        return {\n          ...prevState,\n          apples: newApples\n        };\n      });\n      checkCollisions();\n    }\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  }, [checkCollisions]);\n  useEffect(() => {\n    backgroundMusicRef.current.loop = true;\n    return () => {\n      backgroundMusicRef.current.pause();\n    };\n  }, []);\n  useEffect(() => {\n    if (gameState.gameStarted && gameState.time > 0) {\n      const timer = setInterval(() => {\n        setGameState(prev => ({\n          ...prev,\n          time: prev.time - 1\n        }));\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (gameState.time === 0) {\n      endGame();\n    }\n  }, [gameState.gameStarted, gameState.time]);\n  useEffect(() => {\n    if (gameState.gameStarted) {\n      backgroundMusicRef.current.play();\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n      backgroundMusicRef.current.pause();\n    }\n    return () => {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n    };\n  }, [gameState.gameStarted, gameLoop]);\n  const playButtonClickSound = () => {\n    buttonClickSoundRef.current.currentTime = 0;\n    buttonClickSoundRef.current.play();\n  };\n  const startGame = () => {\n    playButtonClickSound();\n    setGameState({\n      ...gameState,\n      gameStarted: true,\n      score: 0,\n      clickCount: 0,\n      time: 60,\n      apples: [],\n      showResult: false\n    });\n  };\n  const endGame = () => {\n    setGameState(prev => ({\n      ...prev,\n      gameStarted: false,\n      showResult: true\n    }));\n    backgroundMusicRef.current.pause();\n  };\n  const movePlayer = useCallback(e => {\n    if (gameState.gameStarted) {\n      const touch = e.touches[0];\n      const newPosition = touch.clientX / window.innerWidth * 100;\n      setGameState(prev => ({\n        ...prev,\n        playerPosition: newPosition\n      }));\n    }\n  }, [gameState.gameStarted]);\n  const handleResultClose = () => {\n    playButtonClickSound();\n    setGameState(prev => ({\n      ...prev,\n      showResult: false\n    }));\n    onGameOver(gameState.clickCount);\n  };\n  const renderApples = useMemo(() => {\n    return gameState.apples.map(apple => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: apple.type === 'good' ? goodAppleImg : rottenAppleImg,\n      alt: apple.type === 'good' ? 'Good Apple' : 'Rotten Apple',\n      className: \"apple\",\n      style: {\n        left: `${apple.x}%`,\n        top: `${apple.y}%`,\n        width: '30px',\n        height: 'auto'\n      }\n    }, apple.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this));\n  }, [gameState.apples]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apple-catcher\",\n    onTouchMove: movePlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Score: \", gameState.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Clicks: \", gameState.clickCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Time: \", gameState.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), !gameState.gameStarted && !gameState.showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [renderApples, scoreAnimations.map(anim => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `score-animation ${anim.score > 0 ? 'positive' : 'negative'}`,\n        style: {\n          left: `${anim.x}%`,\n          top: `${anim.y}%`,\n          opacity: 1,\n          transform: 'translateY(-20px)',\n          transition: 'opacity 1s, transform 1s'\n        },\n        children: anim.score > 0 ? `+${anim.score}` : anim.score\n      }, anim.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: catcherImg,\n        alt: \"Catcher\",\n        className: \"player\",\n        style: {\n          left: `${gameState.playerPosition}%`,\n          width: '90px',\n          height: '90px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), gameState.showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game end!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", gameState.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Clicks (Apples caught): \", gameState.clickCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResultClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n_s(AppleCatcher, \"EI5CdE8sqMow8LPuebiS5QtEN/w=\");\n_c = AppleCatcher;\nexport default AppleCatcher;\nvar _c;\n$RefreshReg$(_c, \"AppleCatcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","goodAppleImg","rottenAppleImg","catcherImg","backgroundMusic","buttonClickSound","jsxDEV","_jsxDEV","AppleCatcher","onGameOver","_s","gameState","setGameState","score","clickCount","time","apples","playerPosition","gameStarted","showResult","scoreAnimations","setScoreAnimations","backgroundMusicRef","Audio","buttonClickSoundRef","gameLoopRef","lastUpdateTimeRef","checkCollisions","prevState","newScore","newClickCount","newApples","filter","apple","y","Math","abs","x","type","animationId","Date","now","prev","id","setTimeout","anim","gameLoop","timestamp","current","map","random","length","push","requestAnimationFrame","loop","pause","timer","setInterval","clearInterval","endGame","play","cancelAnimationFrame","playButtonClickSound","currentTime","startGame","movePlayer","e","touch","touches","newPosition","clientX","window","innerWidth","handleResultClose","renderApples","src","alt","className","style","left","top","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onTouchMove","children","onClick","opacity","transform","transition","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/games/apple-game/AppleCatcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport './AppleCatcher.css';\r\nimport goodAppleImg from './img/good-apple.png';\r\nimport rottenAppleImg from './img/rotten-apple.png';\r\nimport catcherImg from './img/catcher.png';\r\nimport backgroundMusic from './audio/background-music.mp3';\r\nimport buttonClickSound from './audio/button-click.mp3';\r\n\r\nconst AppleCatcher = ({ onGameOver }) => {\r\n    const [gameState, setGameState] = useState({\r\n        score: 0,\r\n        clickCount: 0,\r\n        time: 60,\r\n        apples: [],\r\n        playerPosition: 50,\r\n        gameStarted: false,\r\n        showResult: false\r\n    });\r\n\r\n    const [scoreAnimations, setScoreAnimations] = useState([]);\r\n\r\n    const backgroundMusicRef = useRef(new Audio(backgroundMusic));\r\n    const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\r\n    const gameLoopRef = useRef(null);\r\n    const lastUpdateTimeRef = useRef(0);\r\n\r\n    const checkCollisions = useCallback(() => {\r\n        setGameState(prevState => {\r\n            let newScore = prevState.score;\r\n            let newClickCount = prevState.clickCount;\r\n            const newApples = prevState.apples.filter(apple => {\r\n                if (\r\n                    apple.y > 70 &&\r\n                    apple.y < 85 &&\r\n                    Math.abs(apple.x - prevState.playerPosition) < 15\r\n                ) {\r\n                    if (apple.type === 'good') {\r\n                        newScore += 10;\r\n                        newClickCount += 1; // Увеличиваем счетчик кликов только для хороших яблок\r\n                    } else {\r\n                        newScore -= 20;\r\n                    }\r\n                    const animationId = Date.now();\r\n                    setScoreAnimations(prev => [...prev, {\r\n                        id: animationId,\r\n                        x: apple.x,\r\n                        y: apple.y,\r\n                        score: apple.type === 'good' ? 10 : -20\r\n                    }]);\r\n                    \r\n                    setTimeout(() => {\r\n                        setScoreAnimations(prev => prev.filter(anim => anim.id !== animationId));\r\n                    }, 1000);\r\n\r\n                    return false;\r\n                }\r\n                return apple.y < 100;\r\n            });\r\n\r\n            return {\r\n                ...prevState,\r\n                apples: newApples,\r\n                score: newScore,\r\n                clickCount: newClickCount\r\n            };\r\n        });\r\n    }, []);\r\n\r\n    const gameLoop = useCallback((timestamp) => {\r\n        if (timestamp - lastUpdateTimeRef.current > 16) {  // ~60 FPS\r\n            lastUpdateTimeRef.current = timestamp;\r\n            setGameState(prevState => {\r\n                if (!prevState.gameStarted) return prevState;\r\n\r\n                let newApples = prevState.apples.map(apple => ({\r\n                    ...apple,\r\n                    y: apple.y + 0.5,\r\n                }));\r\n\r\n                if (Math.random() < 0.02 && newApples.length < 5) {\r\n                    newApples.push({\r\n                        id: Date.now(),\r\n                        x: Math.random() * 100,\r\n                        y: 0,\r\n                        type: Math.random() > 0.2 ? 'good' : 'rotten',\r\n                    });\r\n                }\r\n\r\n                newApples = newApples.filter(apple => apple.y < 100);\r\n\r\n                return {\r\n                    ...prevState,\r\n                    apples: newApples,\r\n                };\r\n            });\r\n\r\n            checkCollisions();\r\n        }\r\n\r\n        gameLoopRef.current = requestAnimationFrame(gameLoop);\r\n    }, [checkCollisions]);\r\n\r\n    useEffect(() => {\r\n        backgroundMusicRef.current.loop = true;\r\n        return () => {\r\n            backgroundMusicRef.current.pause();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (gameState.gameStarted && gameState.time > 0) {\r\n            const timer = setInterval(() => {\r\n                setGameState(prev => ({ ...prev, time: prev.time - 1 }));\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timer);\r\n        } else if (gameState.time === 0) {\r\n            endGame();\r\n        }\r\n    }, [gameState.gameStarted, gameState.time]);\r\n\r\n    useEffect(() => {\r\n        if (gameState.gameStarted) {\r\n            backgroundMusicRef.current.play();\r\n            gameLoopRef.current = requestAnimationFrame(gameLoop);\r\n        } else {\r\n            if (gameLoopRef.current) {\r\n                cancelAnimationFrame(gameLoopRef.current);\r\n            }\r\n            backgroundMusicRef.current.pause();\r\n        }\r\n\r\n        return () => {\r\n            if (gameLoopRef.current) {\r\n                cancelAnimationFrame(gameLoopRef.current);\r\n            }\r\n        };\r\n    }, [gameState.gameStarted, gameLoop]);\r\n\r\n    const playButtonClickSound = () => {\r\n        buttonClickSoundRef.current.currentTime = 0;\r\n        buttonClickSoundRef.current.play();\r\n    };\r\n\r\n    const startGame = () => {\r\n        playButtonClickSound();\r\n        setGameState({\r\n            ...gameState,\r\n            gameStarted: true,\r\n            score: 0,\r\n            clickCount: 0,\r\n            time: 60,\r\n            apples: [],\r\n            showResult: false\r\n        });\r\n    };\r\n\r\n    const endGame = () => {\r\n        setGameState(prev => ({\r\n            ...prev,\r\n            gameStarted: false,\r\n            showResult: true\r\n        }));\r\n        backgroundMusicRef.current.pause();\r\n    };\r\n\r\n    const movePlayer = useCallback((e) => {\r\n        if (gameState.gameStarted) {\r\n            const touch = e.touches[0];\r\n            const newPosition = (touch.clientX / window.innerWidth) * 100;\r\n            setGameState(prev => ({ ...prev, playerPosition: newPosition }));\r\n        }\r\n    }, [gameState.gameStarted]);\r\n\r\n    const handleResultClose = () => {\r\n        playButtonClickSound();\r\n        setGameState(prev => ({ ...prev, showResult: false }));\r\n        onGameOver(gameState.clickCount);\r\n    };\r\n\r\n    const renderApples = useMemo(() => {\r\n        return gameState.apples.map((apple) => (\r\n            <img\r\n                key={apple.id}\r\n                src={apple.type === 'good' ? goodAppleImg : rottenAppleImg}\r\n                alt={apple.type === 'good' ? 'Good Apple' : 'Rotten Apple'}\r\n                className=\"apple\"\r\n                style={{ \r\n                    left: `${apple.x}%`, \r\n                    top: `${apple.y}%`,\r\n                    width: '30px',\r\n                    height: 'auto'\r\n                }}\r\n            />\r\n        ));\r\n    }, [gameState.apples]);\r\n\r\n    return (\r\n        <div className=\"apple-catcher\" onTouchMove={movePlayer}>\r\n            <div className=\"game-info\">\r\n                <span>Score: {gameState.score}</span>\r\n                <span>Clicks: {gameState.clickCount}</span>\r\n                <span>Time: {gameState.time}</span>\r\n            </div>\r\n            {!gameState.gameStarted && !gameState.showResult && (\r\n                <button className=\"start-button\" onClick={startGame}>Start Game</button>\r\n            )}\r\n            <div className=\"game-area\">\r\n                {renderApples}\r\n                {scoreAnimations.map((anim) => (\r\n                    <div\r\n                        key={anim.id}\r\n                        className={`score-animation ${anim.score > 0 ? 'positive' : 'negative'}`}\r\n                        style={{ \r\n                            left: `${anim.x}%`, \r\n                            top: `${anim.y}%`,\r\n                            opacity: 1,\r\n                            transform: 'translateY(-20px)',\r\n                            transition: 'opacity 1s, transform 1s'\r\n                        }}\r\n                    >\r\n                        {anim.score > 0 ? `+${anim.score}` : anim.score}\r\n                    </div>\r\n                ))}\r\n                <img\r\n                    src={catcherImg}\r\n                    alt=\"Catcher\"\r\n                    className=\"player\"\r\n                    style={{ \r\n                        left: `${gameState.playerPosition}%`,\r\n                        width: '90px',\r\n                        height: '90px'\r\n                    }}\r\n                />\r\n            </div>\r\n            {gameState.showResult && (\r\n                <div className=\"result-modal\">\r\n                    <div className=\"result-content\">\r\n                        <h2>Game end!</h2>\r\n                        <p>Your score: {gameState.score}</p>\r\n                        <p>Clicks (Apples caught): {gameState.clickCount}</p>\r\n                        <button onClick={handleResultClose}>OK</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppleCatcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}