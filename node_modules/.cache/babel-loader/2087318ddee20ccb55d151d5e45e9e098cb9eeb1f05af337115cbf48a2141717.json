{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\games\\\\apple-game\\\\AppleCatcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './AppleCatcher.css';\nimport goodAppleImg from './img/good-apple.png';\nimport rottenAppleImg from './img/rotten-apple.png';\nimport catcherImg from './img/catcher.png';\nimport backgroundTreeImg from './img/apple-tree.png';\nimport backgroundMusic from './audio/background-music.mp3';\nimport buttonClickSound from './audio/button-click.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppleCatcher = ({\n  onGameOver\n}) => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [scoreAnimations, setScoreAnimations] = useState([]);\n  const canvasRef = useRef(null);\n  const applesRef = useRef([]);\n  const playerPositionRef = useRef(50);\n  const backgroundMusicRef = useRef(new Audio(backgroundMusic));\n  const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\n  const animationFrameRef = useRef(null);\n  const lastUpdateTimeRef = useRef(0);\n  const gameActiveRef = useRef(false);\n  const images = useRef({\n    goodApple: new Image(),\n    rottenApple: new Image(),\n    catcher: new Image(),\n    background: new Image()\n  });\n  useEffect(() => {\n    images.current.goodApple.src = goodAppleImg;\n    images.current.rottenApple.src = rottenAppleImg;\n    images.current.catcher.src = catcherImg;\n    images.current.background.src = backgroundTreeImg;\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    backgroundMusicRef.current.loop = true;\n    return () => {\n      backgroundMusicRef.current.pause();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n  const checkCollisions = useCallback(() => {\n    if (!gameActiveRef.current) return;\n    const canvas = canvasRef.current;\n    const playerWidth = canvas.width * 0.2;\n    const appleWidth = canvas.width * 0.05;\n    const collisionThreshold = (playerWidth + appleWidth) / 2;\n    applesRef.current = applesRef.current.filter(apple => {\n      const playerCenterX = playerPositionRef.current * canvas.width / 100;\n      const appleCenterX = apple.x * canvas.width / 100;\n      if (apple.y > canvas.height * 0.85 && apple.y < canvas.height * 0.95 && Math.abs(appleCenterX - playerCenterX) < collisionThreshold) {\n        const scoreChange = apple.type === 'good' ? 10 : -10;\n        setScore(prevScore => prevScore + scoreChange);\n        setScoreAnimations(prev => [...prev, {\n          id: Date.now(),\n          x: playerCenterX,\n          y: canvas.height * 0.85,\n          // Появляется над ловцом\n          score: scoreChange,\n          opacity: 1\n        }]);\n        return false;\n      }\n      return apple.y < canvas.height;\n    });\n  }, []);\n  const updateGameState = useCallback(deltaTime => {\n    if (!gameActiveRef.current) return;\n    const fallSpeed = 0.055; // Увеличено на 10% от исходного значения 0.05\n    applesRef.current = applesRef.current.map(apple => ({\n      ...apple,\n      y: apple.y + fallSpeed * deltaTime\n    }));\n    if (Math.random() < 0.01 && applesRef.current.length < 5) {\n      applesRef.current.push({\n        id: Date.now(),\n        x: Math.random() * 100,\n        y: 0,\n        type: Math.random() > 0.2 ? 'good' : 'rotten' // Исходное соотношение\n      });\n    }\n    setScoreAnimations(prev => prev.map(anim => ({\n      ...anim,\n      y: anim.y - 0.5,\n      opacity: anim.opacity - 0.01 // Замедлили исчезновение анимации\n    })).filter(anim => anim.opacity > 0));\n    checkCollisions();\n  }, [checkCollisions]);\n  const drawGame = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Рисуем голубой фон\n    ctx.fillStyle = 'skyblue';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Рисуем дерево\n    ctx.drawImage(images.current.background, 0, 0, canvas.width, canvas.height);\n\n    // Рисуем яблоки\n    applesRef.current.forEach(apple => {\n      const img = apple.type === 'good' ? images.current.goodApple : images.current.rottenApple;\n      const appleSize = canvas.width * 0.05;\n      ctx.drawImage(img, apple.x * canvas.width / 100 - appleSize / 2, apple.y, appleSize, appleSize);\n    });\n\n    // Рисуем игрока\n    const playerWidth = canvas.width * 0.2;\n    const playerHeight = playerWidth * (90 / 90);\n    const playerY = canvas.height * 0.92; // Ловец находится ниже\n    ctx.drawImage(images.current.catcher, playerPositionRef.current * canvas.width / 100 - playerWidth / 2, playerY - playerHeight, playerWidth, playerHeight);\n\n    // Рисуем анимации очков\n    scoreAnimations.forEach(anim => {\n      ctx.font = 'bold 24px Arial';\n      ctx.fillStyle = `rgba(${anim.score > 0 ? '0, 255, 0' : '255, 0, 0'}, ${anim.opacity})`;\n      ctx.fillText(`${anim.score > 0 ? '+' : ''}${anim.score}`, anim.x, anim.y);\n    });\n\n    // Рисуем счет и время\n    ctx.font = '20px Arial';\n    ctx.fillStyle = 'black';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\n  }, [score, time, scoreAnimations]);\n  const gameLoop = useCallback(timestamp => {\n    if (!gameActiveRef.current) return;\n    if (!lastUpdateTimeRef.current) {\n      lastUpdateTimeRef.current = timestamp;\n    }\n    const deltaTime = timestamp - lastUpdateTimeRef.current;\n    lastUpdateTimeRef.current = timestamp;\n    updateGameState(deltaTime);\n    drawGame();\n    animationFrameRef.current = requestAnimationFrame(gameLoop);\n  }, [updateGameState, drawGame]);\n  useEffect(() => {\n    if (gameStarted && time > 0) {\n      gameActiveRef.current = true;\n      const timer = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            endGame();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    if (gameStarted && gameActiveRef.current) {\n      backgroundMusicRef.current.play().catch(console.error);\n      animationFrameRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      backgroundMusicRef.current.pause();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    }\n  }, [gameStarted, gameLoop]);\n  const startGame = () => {\n    buttonClickSoundRef.current.play().catch(console.error);\n    setGameStarted(true);\n    setScore(0);\n    setTime(60);\n    applesRef.current = [];\n    setShowResult(false);\n    gameActiveRef.current = true;\n  };\n  const endGame = () => {\n    setGameStarted(false);\n    gameActiveRef.current = false;\n    setShowResult(true);\n    backgroundMusicRef.current.pause();\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n  };\n  const movePlayer = useCallback(e => {\n    if (gameActiveRef.current) {\n      const touch = e.touches[0];\n      playerPositionRef.current = touch.clientX / window.innerWidth * 100;\n    }\n  }, []);\n  const handleResultClose = () => {\n    buttonClickSoundRef.current.play().catch(console.error);\n    setShowResult(false);\n    onGameOver(score);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apple-catcher\",\n    onTouchMove: movePlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), !gameStarted && !showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResultClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n_s(AppleCatcher, \"RQ4FzVhlEIOwEwMEzpbJHOpwhiU=\");\n_c = AppleCatcher;\nexport default AppleCatcher;\nvar _c;\n$RefreshReg$(_c, \"AppleCatcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","goodAppleImg","rottenAppleImg","catcherImg","backgroundTreeImg","backgroundMusic","buttonClickSound","jsxDEV","_jsxDEV","AppleCatcher","onGameOver","_s","score","setScore","time","setTime","gameStarted","setGameStarted","showResult","setShowResult","scoreAnimations","setScoreAnimations","canvasRef","applesRef","playerPositionRef","backgroundMusicRef","Audio","buttonClickSoundRef","animationFrameRef","lastUpdateTimeRef","gameActiveRef","images","goodApple","Image","rottenApple","catcher","background","current","src","canvas","width","window","innerWidth","height","innerHeight","loop","pause","cancelAnimationFrame","checkCollisions","playerWidth","appleWidth","collisionThreshold","filter","apple","playerCenterX","appleCenterX","x","y","Math","abs","scoreChange","type","prevScore","prev","id","Date","now","opacity","updateGameState","deltaTime","fallSpeed","map","random","length","push","anim","drawGame","ctx","getContext","fillStyle","fillRect","drawImage","forEach","img","appleSize","playerHeight","playerY","font","fillText","gameLoop","timestamp","requestAnimationFrame","timer","setInterval","prevTime","clearInterval","endGame","play","catch","console","error","startGame","movePlayer","e","touch","touches","clientX","handleResultClose","className","onTouchMove","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/games/apple-game/AppleCatcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './AppleCatcher.css';\r\nimport goodAppleImg from './img/good-apple.png';\r\nimport rottenAppleImg from './img/rotten-apple.png';\r\nimport catcherImg from './img/catcher.png';\r\nimport backgroundTreeImg from './img/apple-tree.png';\r\nimport backgroundMusic from './audio/background-music.mp3';\r\nimport buttonClickSound from './audio/button-click.mp3';\r\n\r\nconst AppleCatcher = ({ onGameOver }) => {\r\n    const [score, setScore] = useState(0);\r\n    const [time, setTime] = useState(60);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [scoreAnimations, setScoreAnimations] = useState([]);\r\n\r\n    const canvasRef = useRef(null);\r\n    const applesRef = useRef([]);\r\n    const playerPositionRef = useRef(50);\r\n    const backgroundMusicRef = useRef(new Audio(backgroundMusic));\r\n    const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\r\n    const animationFrameRef = useRef(null);\r\n    const lastUpdateTimeRef = useRef(0);\r\n    const gameActiveRef = useRef(false);\r\n\r\n    const images = useRef({\r\n        goodApple: new Image(),\r\n        rottenApple: new Image(),\r\n        catcher: new Image(),\r\n        background: new Image(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        images.current.goodApple.src = goodAppleImg;\r\n        images.current.rottenApple.src = rottenAppleImg;\r\n        images.current.catcher.src = catcherImg;\r\n        images.current.background.src = backgroundTreeImg;\r\n\r\n        const canvas = canvasRef.current;\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        backgroundMusicRef.current.loop = true;\r\n\r\n        return () => {\r\n            backgroundMusicRef.current.pause();\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const checkCollisions = useCallback(() => {\r\n        if (!gameActiveRef.current) return;\r\n\r\n        const canvas = canvasRef.current;\r\n        const playerWidth = canvas.width * 0.2;\r\n        const appleWidth = canvas.width * 0.05;\r\n        const collisionThreshold = (playerWidth + appleWidth) / 2;\r\n\r\n        applesRef.current = applesRef.current.filter((apple) => {\r\n            const playerCenterX = playerPositionRef.current * canvas.width / 100;\r\n            const appleCenterX = apple.x * canvas.width / 100;\r\n\r\n            if (\r\n                apple.y > canvas.height * 0.85 &&\r\n                apple.y < canvas.height * 0.95 &&\r\n                Math.abs(appleCenterX - playerCenterX) < collisionThreshold\r\n            ) {\r\n                const scoreChange = apple.type === 'good' ? 10 : -10;\r\n                setScore(prevScore => prevScore + scoreChange);\r\n                \r\n                setScoreAnimations(prev => [...prev, {\r\n                    id: Date.now(),\r\n                    x: playerCenterX,\r\n                    y: canvas.height * 0.85, // Появляется над ловцом\r\n                    score: scoreChange,\r\n                    opacity: 1\r\n                }]);\r\n\r\n                return false;\r\n            }\r\n            return apple.y < canvas.height;\r\n        });\r\n    }, []);\r\n\r\n    const updateGameState = useCallback((deltaTime) => {\r\n        if (!gameActiveRef.current) return;\r\n\r\n        const fallSpeed = 0.055; // Увеличено на 10% от исходного значения 0.05\r\n        applesRef.current = applesRef.current.map(apple => ({\r\n            ...apple,\r\n            y: apple.y + fallSpeed * deltaTime,\r\n        }));\r\n\r\n        if (Math.random() < 0.01 && applesRef.current.length < 5) {\r\n            applesRef.current.push({\r\n                id: Date.now(),\r\n                x: Math.random() * 100,\r\n                y: 0,\r\n                type: Math.random() > 0.2 ? 'good' : 'rotten', // Исходное соотношение\r\n            });\r\n        }\r\n\r\n        setScoreAnimations(prev => \r\n            prev.map(anim => ({\r\n                ...anim,\r\n                y: anim.y - 0.5,\r\n                opacity: anim.opacity - 0.01 // Замедлили исчезновение анимации\r\n            })).filter(anim => anim.opacity > 0)\r\n        );\r\n\r\n        checkCollisions();\r\n    }, [checkCollisions]);\r\n\r\n    const drawGame = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Рисуем голубой фон\r\n        ctx.fillStyle = 'skyblue';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Рисуем дерево\r\n        ctx.drawImage(images.current.background, 0, 0, canvas.width, canvas.height);\r\n\r\n        // Рисуем яблоки\r\n        applesRef.current.forEach(apple => {\r\n            const img = apple.type === 'good' ? images.current.goodApple : images.current.rottenApple;\r\n            const appleSize = canvas.width * 0.05;\r\n            ctx.drawImage(img, apple.x * canvas.width / 100 - appleSize / 2, apple.y, appleSize, appleSize);\r\n        });\r\n\r\n        // Рисуем игрока\r\n        const playerWidth = canvas.width * 0.2;\r\n        const playerHeight = playerWidth * (90 / 90);\r\n        const playerY = canvas.height * 0.92; // Ловец находится ниже\r\n        ctx.drawImage(images.current.catcher, playerPositionRef.current * canvas.width / 100 - playerWidth / 2, playerY - playerHeight, playerWidth, playerHeight);\r\n\r\n        // Рисуем анимации очков\r\n        scoreAnimations.forEach(anim => {\r\n            ctx.font = 'bold 24px Arial';\r\n            ctx.fillStyle = `rgba(${anim.score > 0 ? '0, 255, 0' : '255, 0, 0'}, ${anim.opacity})`;\r\n            ctx.fillText(`${anim.score > 0 ? '+' : ''}${anim.score}`, anim.x, anim.y);\r\n        });\r\n\r\n        // Рисуем счет и время\r\n        ctx.font = '20px Arial';\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText(`Score: ${score}`, 10, 30);\r\n        ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\r\n    }, [score, time, scoreAnimations]);\r\n\r\n    const gameLoop = useCallback((timestamp) => {\r\n        if (!gameActiveRef.current) return;\r\n\r\n        if (!lastUpdateTimeRef.current) {\r\n            lastUpdateTimeRef.current = timestamp;\r\n        }\r\n        const deltaTime = timestamp - lastUpdateTimeRef.current;\r\n        lastUpdateTimeRef.current = timestamp;\r\n\r\n        updateGameState(deltaTime);\r\n        drawGame();\r\n\r\n        animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n    }, [updateGameState, drawGame]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted && time > 0) {\r\n            gameActiveRef.current = true;\r\n            const timer = setInterval(() => {\r\n                setTime(prevTime => {\r\n                    if (prevTime <= 1) {\r\n                        clearInterval(timer);\r\n                        endGame();\r\n                        return 0;\r\n                    }\r\n                    return prevTime - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timer);\r\n        }\r\n    }, [gameStarted]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted && gameActiveRef.current) {\r\n            backgroundMusicRef.current.play().catch(console.error);\r\n            animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n        } else {\r\n            backgroundMusicRef.current.pause();\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        }\r\n    }, [gameStarted, gameLoop]);\r\n\r\n    const startGame = () => {\r\n        buttonClickSoundRef.current.play().catch(console.error);\r\n        setGameStarted(true);\r\n        setScore(0);\r\n        setTime(60);\r\n        applesRef.current = [];\r\n        setShowResult(false);\r\n        gameActiveRef.current = true;\r\n    };\r\n\r\n    const endGame = () => {\r\n        setGameStarted(false);\r\n        gameActiveRef.current = false;\r\n        setShowResult(true);\r\n        backgroundMusicRef.current.pause();\r\n        if (animationFrameRef.current) {\r\n            cancelAnimationFrame(animationFrameRef.current);\r\n        }\r\n    };\r\n\r\n    const movePlayer = useCallback((e) => {\r\n        if (gameActiveRef.current) {\r\n            const touch = e.touches[0];\r\n            playerPositionRef.current = (touch.clientX / window.innerWidth) * 100;\r\n        }\r\n    }, []);\r\n\r\n    const handleResultClose = () => {\r\n        buttonClickSoundRef.current.play().catch(console.error);\r\n        setShowResult(false);\r\n        onGameOver(score);\r\n    };\r\n\r\n    return (\r\n        <div className=\"apple-catcher\" onTouchMove={movePlayer}>\r\n            <canvas ref={canvasRef} className=\"game-canvas\" />\r\n            {!gameStarted && !showResult && (\r\n                <button className=\"start-button\" onClick={startGame}>Start Game</button>\r\n            )}\r\n            {showResult && (\r\n                <div className=\"result-modal\">\r\n                    <div className=\"result-content\">\r\n                        <h2>Game Over!</h2>\r\n                        <p>Your score: {score}</p>\r\n                        <button onClick={handleResultClose}>OK</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppleCatcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}