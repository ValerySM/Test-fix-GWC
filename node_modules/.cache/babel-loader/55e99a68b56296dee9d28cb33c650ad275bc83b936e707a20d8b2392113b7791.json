{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst GlobalScore = {\n  totalClicks: 0,\n  appleCatcherScore: 0,\n  purblePairsScore: 0,\n  getTotalClicks: function () {\n    return this.totalClicks;\n  },\n  updateScore: function (gameType, score) {\n    switch (gameType) {\n      case 'appleCatcher':\n        this.appleCatcherScore = score;\n        break;\n      case 'purblePairs':\n        this.purblePairsScore = score;\n        break;\n      case 'eatsApp':\n        this.totalClicks = score;\n        break;\n      default:\n        console.error('Неизвестный тип игры:', gameType);\n    }\n    this.recalculateTotalClicks();\n    this.saveToLocalStorage();\n  },\n  recalculateTotalClicks: function () {\n    this.totalClicks = Math.max(this.totalClicks, this.appleCatcherScore + this.purblePairsScore);\n  },\n  saveToLocalStorage: function () {\n    localStorage.setItem('globalScore', JSON.stringify({\n      totalClicks: this.totalClicks,\n      appleCatcherScore: this.appleCatcherScore,\n      purblePairsScore: this.purblePairsScore\n    }));\n  },\n  loadFromLocalStorage: function () {\n    const savedScore = localStorage.getItem('globalScore');\n    if (savedScore) {\n      const parsedScore = JSON.parse(savedScore);\n      this.totalClicks = parsedScore.totalClicks;\n      this.appleCatcherScore = parsedScore.appleCatcherScore;\n      this.purblePairsScore = parsedScore.purblePairsScore;\n    }\n  },\n  useGlobalScore: _s(function () {\n    _s();\n    const [score, setScore] = useState(this.totalClicks);\n    useEffect(() => {\n      this.loadFromLocalStorage();\n      setScore(this.totalClicks);\n    }, []);\n    return [score, (gameType, newScore) => {\n      this.updateScore(gameType, newScore);\n      setScore(this.totalClicks);\n    }];\n  }, \"iz/r3kakB9iK6o95IiH5h/1XHzo=\")\n};\nexport default GlobalScore;","map":{"version":3,"names":["useState","useEffect","GlobalScore","totalClicks","appleCatcherScore","purblePairsScore","getTotalClicks","updateScore","gameType","score","console","error","recalculateTotalClicks","saveToLocalStorage","Math","max","localStorage","setItem","JSON","stringify","loadFromLocalStorage","savedScore","getItem","parsedScore","parse","useGlobalScore","_s","setScore","newScore"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/GlobalScore.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst GlobalScore = {\r\n  totalClicks: 0,\r\n  appleCatcherScore: 0,\r\n  purblePairsScore: 0,\r\n\r\n  getTotalClicks: function() {\r\n    return this.totalClicks;\r\n  },\r\n\r\n  updateScore: function(gameType, score) {\r\n    switch(gameType) {\r\n      case 'appleCatcher':\r\n        this.appleCatcherScore = score;\r\n        break;\r\n      case 'purblePairs':\r\n        this.purblePairsScore = score;\r\n        break;\r\n      case 'eatsApp':\r\n        this.totalClicks = score;\r\n        break;\r\n      default:\r\n        console.error('Неизвестный тип игры:', gameType);\r\n    }\r\n    this.recalculateTotalClicks();\r\n    this.saveToLocalStorage();\r\n  },\r\n\r\n  recalculateTotalClicks: function() {\r\n    this.totalClicks = Math.max(this.totalClicks, this.appleCatcherScore + this.purblePairsScore);\r\n  },\r\n\r\n  saveToLocalStorage: function() {\r\n    localStorage.setItem('globalScore', JSON.stringify({\r\n      totalClicks: this.totalClicks,\r\n      appleCatcherScore: this.appleCatcherScore,\r\n      purblePairsScore: this.purblePairsScore\r\n    }));\r\n  },\r\n\r\n  loadFromLocalStorage: function() {\r\n    const savedScore = localStorage.getItem('globalScore');\r\n    if (savedScore) {\r\n      const parsedScore = JSON.parse(savedScore);\r\n      this.totalClicks = parsedScore.totalClicks;\r\n      this.appleCatcherScore = parsedScore.appleCatcherScore;\r\n      this.purblePairsScore = parsedScore.purblePairsScore;\r\n    }\r\n  },\r\n\r\n  useGlobalScore: function() {\r\n    const [score, setScore] = useState(this.totalClicks);\r\n\r\n    useEffect(() => {\r\n      this.loadFromLocalStorage();\r\n      setScore(this.totalClicks);\r\n    }, []);\r\n\r\n    return [score, (gameType, newScore) => {\r\n      this.updateScore(gameType, newScore);\r\n      setScore(this.totalClicks);\r\n    }];\r\n  }\r\n};\r\n\r\nexport default GlobalScore;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,CAAC;EACdC,iBAAiB,EAAE,CAAC;EACpBC,gBAAgB,EAAE,CAAC;EAEnBC,cAAc,EAAE,SAAAA,CAAA,EAAW;IACzB,OAAO,IAAI,CAACH,WAAW;EACzB,CAAC;EAEDI,WAAW,EAAE,SAAAA,CAASC,QAAQ,EAAEC,KAAK,EAAE;IACrC,QAAOD,QAAQ;MACb,KAAK,cAAc;QACjB,IAAI,CAACJ,iBAAiB,GAAGK,KAAK;QAC9B;MACF,KAAK,aAAa;QAChB,IAAI,CAACJ,gBAAgB,GAAGI,KAAK;QAC7B;MACF,KAAK,SAAS;QACZ,IAAI,CAACN,WAAW,GAAGM,KAAK;QACxB;MACF;QACEC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,QAAQ,CAAC;IACpD;IACA,IAAI,CAACI,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EAEDD,sBAAsB,EAAE,SAAAA,CAAA,EAAW;IACjC,IAAI,CAACT,WAAW,GAAGW,IAAI,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,EAAE,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACC,gBAAgB,CAAC;EAC/F,CAAC;EAEDQ,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC7BG,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjDhB,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCC,gBAAgB,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC,CAAC;EACL,CAAC;EAEDe,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC/B,MAAMC,UAAU,GAAGL,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;IACtD,IAAID,UAAU,EAAE;MACd,MAAME,WAAW,GAAGL,IAAI,CAACM,KAAK,CAACH,UAAU,CAAC;MAC1C,IAAI,CAAClB,WAAW,GAAGoB,WAAW,CAACpB,WAAW;MAC1C,IAAI,CAACC,iBAAiB,GAAGmB,WAAW,CAACnB,iBAAiB;MACtD,IAAI,CAACC,gBAAgB,GAAGkB,WAAW,CAAClB,gBAAgB;IACtD;EACF,CAAC;EAEDoB,cAAc,EAAAC,EAAA,CAAE,YAAW;IAAAA,EAAA;IACzB,MAAM,CAACjB,KAAK,EAAEkB,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAACG,WAAW,CAAC;IAEpDF,SAAS,CAAC,MAAM;MACd,IAAI,CAACmB,oBAAoB,CAAC,CAAC;MAC3BO,QAAQ,CAAC,IAAI,CAACxB,WAAW,CAAC;IAC5B,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,CAACM,KAAK,EAAE,CAACD,QAAQ,EAAEoB,QAAQ,KAAK;MACrC,IAAI,CAACrB,WAAW,CAACC,QAAQ,EAAEoB,QAAQ,CAAC;MACpCD,QAAQ,CAAC,IAAI,CAACxB,WAAW,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}