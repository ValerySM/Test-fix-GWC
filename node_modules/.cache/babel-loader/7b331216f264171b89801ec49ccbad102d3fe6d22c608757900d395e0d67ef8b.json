{"ast":null,"code":"import UniverseData from'../UniverseData';export const handleClick=(energy,damageLevel,count,totalClicks,setCount,updateTotalClicks,setEnergy,setIsImageDistorted,activityTimeoutRef,setRegenRate)=>{if(energy>0&&!isNaN(damageLevel)){const damage=damageLevel;setCount(prevCount=>prevCount+1);updateTotalClicks(damage);setEnergy(prevEnergy=>Math.max(prevEnergy-1,0));setIsImageDistorted(true);clearTimeout(activityTimeoutRef.current);activityTimeoutRef.current=setTimeout(()=>{setIsImageDistorted(false);},200);if(energy===1){setRegenRate(1);}}};export const handleDamageUpgrade=(totalClicks,damageUpgradeCost,updateTotalClicks,setDamageLevel,damageLevel)=>{if(totalClicks>=damageUpgradeCost){updateTotalClicks(-damageUpgradeCost);setDamageLevel(prevLevel=>{const newLevel=prevLevel+1;console.log(\"Damage level upgraded: \".concat(prevLevel,\" -> \").concat(newLevel));return newLevel;});}else{console.log(\"Not enough clicks for upgrade. Current: \".concat(totalClicks,\", Required: \").concat(damageUpgradeCost));}};export const handleEnergyUpgrade=(totalClicks,energyUpgradeCost,updateTotalClicks,setEnergyMax,setEnergyLevel,energyMax,energyLevel)=>{if(totalClicks>=energyUpgradeCost){updateTotalClicks(-energyUpgradeCost);setEnergyMax(prevMax=>{const newMax=prevMax+500;console.log(\"Energy max upgraded: \".concat(prevMax,\" -> \").concat(newMax));return newMax;});setEnergyLevel(prevLevel=>{const newLevel=prevLevel+1;console.log(\"Energy level upgraded: \".concat(prevLevel,\" -> \").concat(newLevel));return newLevel;});}else{console.log(\"Not enough clicks for upgrade. Current: \".concat(totalClicks,\", Required: \").concat(energyUpgradeCost));}};export const handleRegenUpgrade=(totalClicks,regenUpgradeCost,updateTotalClicks,setRegenRate,setRegenLevel,regenRate,regenLevel)=>{if(totalClicks>=regenUpgradeCost&&regenLevel<5){updateTotalClicks(-regenUpgradeCost);setRegenRate(prevRate=>{const newRate=prevRate+1;console.log(\"Regen rate upgraded: \".concat(prevRate,\" -> \").concat(newRate));return newRate;});setRegenLevel(prevLevel=>{const newLevel=prevLevel+1;console.log(\"Regen level upgraded: \".concat(prevLevel,\" -> \").concat(newLevel));return newLevel;});}else if(regenLevel>=5){console.log('Max regen level reached');}else{console.log(\"Not enough clicks for upgrade. Current: \".concat(totalClicks,\", Required: \").concat(regenUpgradeCost));}};export const handleMouseDown=setIsClicking=>{setIsClicking(true);};export const handleMouseUp=(setIsClicking,activityTimeoutRef,setIsImageDistorted,isClicking)=>{setIsClicking(false);clearTimeout(activityTimeoutRef.current);activityTimeoutRef.current=setTimeout(()=>{if(!isClicking){setIsImageDistorted(false);}},2000);};","map":{"version":3,"names":["UniverseData","handleClick","energy","damageLevel","count","totalClicks","setCount","updateTotalClicks","setEnergy","setIsImageDistorted","activityTimeoutRef","setRegenRate","isNaN","damage","prevCount","prevEnergy","Math","max","clearTimeout","current","setTimeout","handleDamageUpgrade","damageUpgradeCost","setDamageLevel","prevLevel","newLevel","console","log","concat","handleEnergyUpgrade","energyUpgradeCost","setEnergyMax","setEnergyLevel","energyMax","energyLevel","prevMax","newMax","handleRegenUpgrade","regenUpgradeCost","setRegenLevel","regenRate","regenLevel","prevRate","newRate","handleMouseDown","setIsClicking","handleMouseUp","isClicking"],"sources":["C:/Users/valery-sm/Test-fix-GWC/src/Universes/EWI/src/scripts/functions.js"],"sourcesContent":["import UniverseData from '../UniverseData';\r\n\r\nexport const handleClick = (energy, damageLevel, count, totalClicks, setCount, updateTotalClicks, setEnergy, setIsImageDistorted, activityTimeoutRef, setRegenRate) => {\r\n  if (energy > 0 && !isNaN(damageLevel)) {\r\n    const damage = damageLevel;\r\n    setCount(prevCount => prevCount + 1);\r\n    updateTotalClicks(damage);\r\n    setEnergy(prevEnergy => Math.max(prevEnergy - 1, 0));\r\n    setIsImageDistorted(true);\r\n    clearTimeout(activityTimeoutRef.current);\r\n    activityTimeoutRef.current = setTimeout(() => {\r\n      setIsImageDistorted(false);\r\n    }, 200);\r\n    if (energy === 1) {\r\n      setRegenRate(1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleDamageUpgrade = (totalClicks, damageUpgradeCost, updateTotalClicks, setDamageLevel, damageLevel) => {\r\n  if (totalClicks >= damageUpgradeCost) {\r\n    updateTotalClicks(-damageUpgradeCost);\r\n    setDamageLevel(prevLevel => {\r\n      const newLevel = prevLevel + 1;\r\n      console.log(`Damage level upgraded: ${prevLevel} -> ${newLevel}`);\r\n      return newLevel;\r\n    });\r\n  } else {\r\n    console.log(`Not enough clicks for upgrade. Current: ${totalClicks}, Required: ${damageUpgradeCost}`);\r\n  }\r\n};\r\n\r\nexport const handleEnergyUpgrade = (totalClicks, energyUpgradeCost, updateTotalClicks, setEnergyMax, setEnergyLevel, energyMax, energyLevel) => {\r\n  if (totalClicks >= energyUpgradeCost) {\r\n    updateTotalClicks(-energyUpgradeCost);\r\n    setEnergyMax(prevMax => {\r\n      const newMax = prevMax + 500;\r\n      console.log(`Energy max upgraded: ${prevMax} -> ${newMax}`);\r\n      return newMax;\r\n    });\r\n    setEnergyLevel(prevLevel => {\r\n      const newLevel = prevLevel + 1;\r\n      console.log(`Energy level upgraded: ${prevLevel} -> ${newLevel}`);\r\n      return newLevel;\r\n    });\r\n  } else {\r\n    console.log(`Not enough clicks for upgrade. Current: ${totalClicks}, Required: ${energyUpgradeCost}`);\r\n  }\r\n};\r\n\r\nexport const handleRegenUpgrade = (totalClicks, regenUpgradeCost, updateTotalClicks, setRegenRate, setRegenLevel, regenRate, regenLevel) => {\r\n  if (totalClicks >= regenUpgradeCost && regenLevel < 5) {\r\n    updateTotalClicks(-regenUpgradeCost);\r\n    setRegenRate(prevRate => {\r\n      const newRate = prevRate + 1;\r\n      console.log(`Regen rate upgraded: ${prevRate} -> ${newRate}`);\r\n      return newRate;\r\n    });\r\n    setRegenLevel(prevLevel => {\r\n      const newLevel = prevLevel + 1;\r\n      console.log(`Regen level upgraded: ${prevLevel} -> ${newLevel}`);\r\n      return newLevel;\r\n    });\r\n  } else if (regenLevel >= 5) {\r\n    console.log('Max regen level reached');\r\n  } else {\r\n    console.log(`Not enough clicks for upgrade. Current: ${totalClicks}, Required: ${regenUpgradeCost}`);\r\n  }\r\n};\r\n\r\nexport const handleMouseDown = (setIsClicking) => {\r\n  setIsClicking(true);\r\n};\r\n\r\nexport const handleMouseUp = (setIsClicking, activityTimeoutRef, setIsImageDistorted, isClicking) => {\r\n  setIsClicking(false);\r\n  clearTimeout(activityTimeoutRef.current);\r\n  activityTimeoutRef.current = setTimeout(() => {\r\n    if (!isClicking) {\r\n      setIsImageDistorted(false);\r\n    }\r\n  }, 2000);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}