{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\games\\\\purble-game\\\\PurblePairs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurblePairs.css';\nimport backgroundMusicFile from './audio/pokemonGym.mp3';\nimport winEffectFile from './audio/win.mp3';\nimport startButtonSound from './audio/start.mp3';\nimport cardClickSound from './audio/card.mp3';\n\n// Импортируем изображения\nimport img1 from './img/1.png';\nimport img2 from './img/2.png';\nimport img3 from './img/3.png';\nimport img4 from './img/4.png';\nimport img5 from './img/5.png';\nimport img6 from './img/6.png';\nimport img7 from './img/7.png';\nimport img8 from './img/8.png';\n\n// Базовая коллекция карт\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseCollection = [{\n  id: 1,\n  art: img1\n}, {\n  id: 2,\n  art: img2\n}, {\n  id: 3,\n  art: img3\n}, {\n  id: 4,\n  art: img4\n}, {\n  id: 5,\n  art: img5\n}, {\n  id: 6,\n  art: img6\n}, {\n  id: 7,\n  art: img7\n}, {\n  id: 8,\n  art: img8\n}];\nconst shuffleArray = array => array.sort(() => Math.random() - 0.5);\nconst PurblePairs = ({\n  onVictory\n}) => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [setIsWin] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [timer, setTimer] = useState(999);\n  const [showMessage, setShowMessage] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const doubledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\n      ...card,\n      isFlipped: false,\n      isMatched: false\n    })));\n    setCards(doubledCards);\n  }, []);\n  useEffect(() => {\n    let interval;\n    if (isGameStarted && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n    } else if (timer === 0) {\n      setIsGameStarted(false);\n      setMessageText(\"Time's up! You lost.\");\n      setShowMessage(true);\n    }\n    return () => clearInterval(interval);\n  }, [isGameStarted, timer]);\n  useEffect(() => {\n    const audio = new Audio(backgroundMusicFile);\n    audio.loop = true;\n    const playAudio = () => {\n      audio.play().catch(error => console.error('Ошибка при воспроизведении фоновой музыки:', error));\n    };\n    playAudio();\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        audio.pause();\n      } else {\n        playAudio();\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      audio.pause();\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n  const playSound = soundFile => {\n    const audio = new Audio(soundFile);\n    audio.play().catch(error => console.error('Ошибка при воспроизведении звука:', error));\n  };\n  const startGame = () => {\n    playSound(startButtonSound); // Воспроизведение звука при нажатии кнопки \"Start\"\n    setIsWin(false);\n    setTimer(60);\n    setScore(0); // Сброс счёта при начале игры\n    setIsGameStarted(true);\n    setMatchedPairs([]);\n    setFlippedCards([]);\n    setShowMessage(false);\n    const shuffledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\n      ...card,\n      isFlipped: false,\n      isMatched: false\n    })));\n    setCards(shuffledCards);\n  };\n  const handleCardClick = index => {\n    if (!isGameStarted || cards[index].isFlipped || cards[index].isMatched) return;\n    playSound(cardClickSound); // Воспроизведение звука при нажатии на карточку\n\n    const newCards = [...cards];\n    newCards[index].isFlipped = true;\n    setCards(newCards);\n    const newFlippedCards = [...flippedCards, index];\n    setFlippedCards(newFlippedCards);\n    if (newFlippedCards.length === 2) {\n      const [firstIndex, secondIndex] = newFlippedCards;\n      if (newCards[firstIndex].id === newCards[secondIndex].id) {\n        newCards[firstIndex].isMatched = true;\n        newCards[secondIndex].isMatched = true;\n        setMatchedPairs([...matchedPairs, newCards[firstIndex].id]);\n        // Увеличиваем счёт на 10\n        setScore(prevScore => prevScore + 10);\n      } else {\n        setTimeout(() => {\n          newCards[firstIndex].isFlipped = false;\n          newCards[secondIndex].isFlipped = false;\n          setCards(newCards);\n        }, 800); // Закрываются за 0.8 секунд\n      }\n      setFlippedCards([]);\n    }\n  };\n  useEffect(() => {\n    if (matchedPairs.length === baseCollection.length) {\n      setIsWin(true);\n      setIsGameStarted(false);\n      setMessageText(\"You Win!\");\n      setShowMessage(true);\n      playSound(winEffectFile);\n      onVictory();\n    }\n  }, [matchedPairs, onVictory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"purble-pairs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timerBtn\",\n          children: timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scoreBtn\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-game\",\n      onClick: startGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-grid\",\n        children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`,\n          onClick: () => handleCardClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-img\",\n              src: card.art,\n              alt: `Card ${card.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-back\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"back-descr\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), showMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: messageText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n_s(PurblePairs, \"yPnvy1nf/Za6gskQbAStVJgy/Ug=\");\n_c = PurblePairs;\nexport default PurblePairs;\nvar _c;\n$RefreshReg$(_c, \"PurblePairs\");","map":{"version":3,"names":["React","useState","useEffect","backgroundMusicFile","winEffectFile","startButtonSound","cardClickSound","img1","img2","img3","img4","img5","img6","img7","img8","jsxDEV","_jsxDEV","baseCollection","id","art","shuffleArray","array","sort","Math","random","PurblePairs","onVictory","_s","cards","setCards","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","setIsWin","isGameStarted","setIsGameStarted","timer","setTimer","showMessage","setShowMessage","messageText","setMessageText","score","setScore","doubledCards","map","card","isFlipped","isMatched","interval","setInterval","prev","clearInterval","audio","Audio","loop","playAudio","play","catch","error","console","handleVisibilityChange","document","visibilityState","pause","addEventListener","removeEventListener","playSound","soundFile","startGame","shuffledCards","handleCardClick","index","newCards","newFlippedCards","length","firstIndex","secondIndex","prevScore","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/games/purble-game/PurblePairs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PurblePairs.css';\r\nimport backgroundMusicFile from './audio/pokemonGym.mp3';\r\nimport winEffectFile from './audio/win.mp3';\r\nimport startButtonSound from './audio/start.mp3';\r\nimport cardClickSound from './audio/card.mp3';\r\n\r\n// Импортируем изображения\r\nimport img1 from './img/1.png';\r\nimport img2 from './img/2.png';\r\nimport img3 from './img/3.png';\r\nimport img4 from './img/4.png';\r\nimport img5 from './img/5.png';\r\nimport img6 from './img/6.png';\r\nimport img7 from './img/7.png';\r\nimport img8 from './img/8.png';\r\n\r\n// Базовая коллекция карт\r\nconst baseCollection = [\r\n    { id: 1, art: img1 },\r\n    { id: 2, art: img2 },\r\n    { id: 3, art: img3 },\r\n    { id: 4, art: img4 },\r\n    { id: 5, art: img5 },\r\n    { id: 6, art: img6 },\r\n    { id: 7, art: img7 },\r\n    { id: 8, art: img8 },\r\n];\r\n\r\nconst shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\nconst PurblePairs = ({ onVictory }) => {\r\n    const [cards, setCards] = useState([]);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedPairs, setMatchedPairs] = useState([]);\r\n    const [setIsWin] = useState(false);\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    const [timer, setTimer] = useState(999);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [messageText, setMessageText] = useState('');\r\n    const [score, setScore] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const doubledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        })));\r\n        setCards(doubledCards);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isGameStarted && timer > 0) {\r\n            interval = setInterval(() => {\r\n                setTimer(prev => prev - 1);\r\n            }, 1000);\r\n        } else if (timer === 0) {\r\n            setIsGameStarted(false);\r\n            setMessageText(\"Time's up! You lost.\");\r\n            setShowMessage(true);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isGameStarted, timer]);\r\n\r\n    useEffect(() => {\r\n        const audio = new Audio(backgroundMusicFile);\r\n        audio.loop = true;\r\n\r\n        const playAudio = () => {\r\n            audio.play().catch(error => console.error('Ошибка при воспроизведении фоновой музыки:', error));\r\n        };\r\n\r\n        playAudio();\r\n\r\n        const handleVisibilityChange = () => {\r\n            if (document.visibilityState === 'hidden') {\r\n                audio.pause();\r\n            } else {\r\n                playAudio();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('visibilitychange', handleVisibilityChange);\r\n\r\n        return () => {\r\n            audio.pause();\r\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n        };\r\n    }, []);\r\n\r\n    const playSound = (soundFile) => {\r\n        const audio = new Audio(soundFile);\r\n        audio.play().catch(error => console.error('Ошибка при воспроизведении звука:', error));\r\n    };\r\n\r\n    const startGame = () => {\r\n        playSound(startButtonSound); // Воспроизведение звука при нажатии кнопки \"Start\"\r\n        setIsWin(false);\r\n        setTimer(60);\r\n        setScore(0); // Сброс счёта при начале игры\r\n        setIsGameStarted(true);\r\n        setMatchedPairs([]);\r\n        setFlippedCards([]);\r\n        setShowMessage(false);\r\n        const shuffledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        })));\r\n        setCards(shuffledCards);\r\n    };\r\n\r\n    const handleCardClick = (index) => {\r\n        if (!isGameStarted || cards[index].isFlipped || cards[index].isMatched) return;\r\n\r\n        playSound(cardClickSound); // Воспроизведение звука при нажатии на карточку\r\n\r\n        const newCards = [...cards];\r\n        newCards[index].isFlipped = true;\r\n        setCards(newCards);\r\n\r\n        const newFlippedCards = [...flippedCards, index];\r\n        setFlippedCards(newFlippedCards);\r\n\r\n        if (newFlippedCards.length === 2) {\r\n            const [firstIndex, secondIndex] = newFlippedCards;\r\n            if (newCards[firstIndex].id === newCards[secondIndex].id) {\r\n                newCards[firstIndex].isMatched = true;\r\n                newCards[secondIndex].isMatched = true;\r\n                setMatchedPairs([...matchedPairs, newCards[firstIndex].id]);\r\n                // Увеличиваем счёт на 10\r\n                setScore(prevScore => prevScore + 10);\r\n            } else {\r\n                setTimeout(() => {\r\n                    newCards[firstIndex].isFlipped = false;\r\n                    newCards[secondIndex].isFlipped = false;\r\n                    setCards(newCards);\r\n                }, 800); // Закрываются за 0.8 секунд\r\n            }\r\n            setFlippedCards([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (matchedPairs.length === baseCollection.length) {\r\n            setIsWin(true);\r\n            setIsGameStarted(false);\r\n            setMessageText(\"You Win!\");\r\n            setShowMessage(true);\r\n            playSound(winEffectFile);\r\n            onVictory();\r\n        }\r\n    }, [matchedPairs, onVictory]);\r\n\r\n    return (\r\n        <div className=\"purble-pairs\">\r\n            <div className=\"game-header\">\r\n                <div className=\"timer\">Time:<p className='timerBtn'>{timer}</p></div>\r\n                <div className='score'>Score:<p className='scoreBtn'>{score}</p></div>\r\n            </div>\r\n            <button className='btn-game' onClick={startGame}>Start</button>\r\n            <div className=\"cards\">\r\n                <div className='cards-grid'>\r\n                    {cards.map((card, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`}\r\n                            onClick={() => handleCardClick(index)}\r\n                        >\r\n                            <div className=\"card-front\">\r\n                                <img className='card-img' src={card.art} alt={`Card ${card.id}`} />\r\n                            </div>\r\n                            <div className=\"card-back\">\r\n                                <span className='back-descr'>Open</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {showMessage && <div className=\"message\">{messageText}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PurblePairs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}