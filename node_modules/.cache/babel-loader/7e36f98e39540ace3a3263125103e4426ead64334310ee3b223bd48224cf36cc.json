{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\games\\\\apple-game\\\\AppleCatcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './AppleCatcher.css';\n\n// Функция для загрузки изображения с обработкой ошибок\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadImage = src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n};\nconst AppleCatcher = ({\n  onGameOver\n}) => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [apples, setApples] = useState([]);\n  const [playerPosition, setPlayerPosition] = useState(50);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [debug, setDebug] = useState(''); // Для отладочных сообщений\n\n  const canvasRef = useRef(null);\n  const backgroundMusicRef = useRef(null);\n  const buttonClickSoundRef = useRef(null);\n  const lastUpdateTimeRef = useRef(0);\n  const animationFrameRef = useRef(null);\n  const imagesRef = useRef({\n    goodApple: null,\n    rottenApple: null,\n    catcher: null\n  });\n  useEffect(() => {\n    console.log('Component mounted');\n    const loadImages = async () => {\n      try {\n        const [goodApple, rottenApple, catcher] = await Promise.all([loadImage('./img/good-apple.png'), loadImage('./img/rotten-apple.png'), loadImage('./img/catcher.png')]);\n        imagesRef.current = {\n          goodApple,\n          rottenApple,\n          catcher\n        };\n        setImagesLoaded(true);\n        setDebug(prev => prev + '\\nImages loaded successfully');\n        console.log('Images loaded successfully');\n      } catch (error) {\n        console.error(\"Failed to load images:\", error);\n        setDebug(prev => prev + '\\nFailed to load images: ' + error.message);\n      }\n    };\n    loadImages();\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      console.log(\"Canvas size set:\", canvas.width, canvas.height);\n      setDebug(prev => prev + `\\nCanvas size set: ${canvas.width}x${canvas.height}`);\n    }\n    backgroundMusicRef.current = new Audio('./audio/background-music.mp3');\n    backgroundMusicRef.current.loop = true;\n    buttonClickSoundRef.current = new Audio('./audio/button-click.mp3');\n    return () => {\n      console.log('Component will unmount');\n      if (backgroundMusicRef.current) {\n        backgroundMusicRef.current.pause();\n        backgroundMusicRef.current = null;\n      }\n      if (buttonClickSoundRef.current) {\n        buttonClickSoundRef.current = null;\n      }\n    };\n  }, []);\n  const checkCollisions = useCallback(() => {\n    setApples(prevApples => prevApples.filter(apple => {\n      if (apple.y > 70 && apple.y < 85 && Math.abs(apple.x - playerPosition) < 15) {\n        const scoreChange = apple.type === 'good' ? 10 : -20;\n        setScore(prevScore => prevScore + scoreChange);\n        console.log(`Collision detected. Score change: ${scoreChange}`);\n        return false;\n      }\n      return apple.y < 100;\n    }));\n  }, [playerPosition]);\n  const drawGame = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !imagesLoaded) {\n      console.log('Canvas or images not ready');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Базовая отрисовка для проверки\n    ctx.fillStyle = 'red';\n    ctx.fillRect(50, 50, 100, 100);\n\n    // Отрисовка яблок\n    apples.forEach(apple => {\n      const img = apple.type === 'good' ? imagesRef.current.goodApple : imagesRef.current.rottenApple;\n      ctx.drawImage(img, apple.x * canvas.width / 100, apple.y * canvas.height / 100, 30, 30);\n    });\n\n    // Отрисовка игрока\n    ctx.drawImage(imagesRef.current.catcher, playerPosition * canvas.width / 100 - 45, canvas.height - 90, 90, 90);\n\n    // Отрисовка счета и времени\n    ctx.font = '20px Arial';\n    ctx.fillStyle = 'white';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\n    console.log('Game drawn');\n  }, [apples, playerPosition, score, time, imagesLoaded]);\n  const gameLoop = useCallback(timestamp => {\n    if (!lastUpdateTimeRef.current) {\n      lastUpdateTimeRef.current = timestamp;\n    }\n    const deltaTime = timestamp - lastUpdateTimeRef.current;\n    if (deltaTime >= 33) {\n      // Примерно 30 FPS для мобильных устройств\n      lastUpdateTimeRef.current = timestamp;\n      setApples(prevApples => {\n        const newApples = prevApples.map(apple => ({\n          ...apple,\n          y: apple.y + 0.5 * (deltaTime / 33)\n        }));\n        if (Math.random() < 0.02 && newApples.length < 4) {\n          newApples.push({\n            id: Date.now(),\n            x: Math.random() * 100,\n            y: 0,\n            type: Math.random() > 0.2 ? 'good' : 'rotten'\n          });\n        }\n        return newApples.filter(apple => apple.y < 100);\n      });\n      checkCollisions();\n      drawGame();\n    }\n    animationFrameRef.current = requestAnimationFrame(gameLoop);\n  }, [checkCollisions, drawGame]);\n  useEffect(() => {\n    if (gameStarted && imagesLoaded) {\n      console.log('Starting game loop');\n      if (backgroundMusicRef.current) {\n        backgroundMusicRef.current.play().catch(error => {\n          console.error(\"Error playing audio:\", error);\n          setDebug(prev => prev + '\\nError playing audio: ' + error.message);\n        });\n      }\n      animationFrameRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      console.log('Stopping game loop');\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (backgroundMusicRef.current) {\n        backgroundMusicRef.current.pause();\n      }\n    }\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [gameStarted, gameLoop, imagesLoaded]);\n  useEffect(() => {\n    if (gameStarted && time > 0) {\n      const timer = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (time === 0) {\n      endGame();\n    }\n  }, [gameStarted, time]);\n  const movePlayer = useCallback(e => {\n    if (gameStarted) {\n      const touch = e.touches[0];\n      const newPosition = touch.clientX / window.innerWidth * 100;\n      setPlayerPosition(newPosition);\n    }\n  }, [gameStarted]);\n  const startGame = () => {\n    console.log('Starting game');\n    setDebug(prev => prev + '\\nStarting game');\n    setGameStarted(true);\n    setScore(0);\n    setTime(60);\n    setApples([]);\n    setShowResult(false);\n    lastUpdateTimeRef.current = 0;\n    if (buttonClickSoundRef.current) {\n      buttonClickSoundRef.current.play().catch(error => {\n        console.error(\"Error playing audio:\", error);\n        setDebug(prev => prev + '\\nError playing button click: ' + error.message);\n      });\n    }\n  };\n  const endGame = () => {\n    console.log('Ending game');\n    setDebug(prev => prev + '\\nEnding game');\n    setGameStarted(false);\n    setShowResult(true);\n    if (backgroundMusicRef.current) {\n      backgroundMusicRef.current.pause();\n    }\n  };\n  const handleResultClose = () => {\n    setShowResult(false);\n    onGameOver(score);\n    if (buttonClickSoundRef.current) {\n      buttonClickSoundRef.current.play().catch(error => {\n        console.error(\"Error playing audio:\", error);\n        setDebug(prev => prev + '\\nError playing button click: ' + error.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apple-catcher\",\n    onTouchMove: movePlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), !imagesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 31\n    }, this), !gameStarted && !showResult && imagesLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game end!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResultClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        left: 10,\n        color: 'white',\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: debug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n};\n_s(AppleCatcher, \"2KasGGUVFKfB5Dkf3T0Z11ObIjY=\");\n_c = AppleCatcher;\nexport default AppleCatcher;\nvar _c;\n$RefreshReg$(_c, \"AppleCatcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","loadImage","src","Promise","resolve","reject","img","Image","onload","onerror","AppleCatcher","onGameOver","_s","score","setScore","time","setTime","apples","setApples","playerPosition","setPlayerPosition","gameStarted","setGameStarted","showResult","setShowResult","imagesLoaded","setImagesLoaded","debug","setDebug","canvasRef","backgroundMusicRef","buttonClickSoundRef","lastUpdateTimeRef","animationFrameRef","imagesRef","goodApple","rottenApple","catcher","console","log","loadImages","all","current","prev","error","message","canvas","width","window","innerWidth","height","innerHeight","Audio","loop","pause","checkCollisions","prevApples","filter","apple","y","Math","abs","x","scoreChange","type","prevScore","drawGame","ctx","getContext","clearRect","fillStyle","fillRect","forEach","drawImage","font","fillText","gameLoop","timestamp","deltaTime","newApples","map","random","length","push","id","Date","now","requestAnimationFrame","play","catch","cancelAnimationFrame","timer","setInterval","prevTime","clearInterval","endGame","movePlayer","e","touch","touches","newPosition","clientX","startGame","handleResultClose","className","onTouchMove","children","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","onClick","transform","bottom","color","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/games/apple-game/AppleCatcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './AppleCatcher.css';\r\n\r\n// Функция для загрузки изображения с обработкой ошибок\r\nconst loadImage = (src) => {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = src;\r\n    });\r\n};\r\n\r\nconst AppleCatcher = ({ onGameOver }) => {\r\n    const [score, setScore] = useState(0);\r\n    const [time, setTime] = useState(60);\r\n    const [apples, setApples] = useState([]);\r\n    const [playerPosition, setPlayerPosition] = useState(50);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [imagesLoaded, setImagesLoaded] = useState(false);\r\n    const [debug, setDebug] = useState(''); // Для отладочных сообщений\r\n\r\n    const canvasRef = useRef(null);\r\n    const backgroundMusicRef = useRef(null);\r\n    const buttonClickSoundRef = useRef(null);\r\n    const lastUpdateTimeRef = useRef(0);\r\n    const animationFrameRef = useRef(null);\r\n    const imagesRef = useRef({\r\n        goodApple: null,\r\n        rottenApple: null,\r\n        catcher: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log('Component mounted');\r\n        const loadImages = async () => {\r\n            try {\r\n                const [goodApple, rottenApple, catcher] = await Promise.all([\r\n                    loadImage('./img/good-apple.png'),\r\n                    loadImage('./img/rotten-apple.png'),\r\n                    loadImage('./img/catcher.png')\r\n                ]);\r\n                imagesRef.current = { goodApple, rottenApple, catcher };\r\n                setImagesLoaded(true);\r\n                setDebug(prev => prev + '\\nImages loaded successfully');\r\n                console.log('Images loaded successfully');\r\n            } catch (error) {\r\n                console.error(\"Failed to load images:\", error);\r\n                setDebug(prev => prev + '\\nFailed to load images: ' + error.message);\r\n            }\r\n        };\r\n\r\n        loadImages();\r\n\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n            console.log(\"Canvas size set:\", canvas.width, canvas.height);\r\n            setDebug(prev => prev + `\\nCanvas size set: ${canvas.width}x${canvas.height}`);\r\n        }\r\n\r\n        backgroundMusicRef.current = new Audio('./audio/background-music.mp3');\r\n        backgroundMusicRef.current.loop = true;\r\n        buttonClickSoundRef.current = new Audio('./audio/button-click.mp3');\r\n\r\n        return () => {\r\n            console.log('Component will unmount');\r\n            if (backgroundMusicRef.current) {\r\n                backgroundMusicRef.current.pause();\r\n                backgroundMusicRef.current = null;\r\n            }\r\n            if (buttonClickSoundRef.current) {\r\n                buttonClickSoundRef.current = null;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const checkCollisions = useCallback(() => {\r\n        setApples((prevApples) =>\r\n            prevApples.filter((apple) => {\r\n                if (\r\n                    apple.y > 70 &&\r\n                    apple.y < 85 &&\r\n                    Math.abs(apple.x - playerPosition) < 15\r\n                ) {\r\n                    const scoreChange = apple.type === 'good' ? 10 : -20;\r\n                    setScore((prevScore) => prevScore + scoreChange);\r\n                    console.log(`Collision detected. Score change: ${scoreChange}`);\r\n                    return false;\r\n                }\r\n                return apple.y < 100;\r\n            })\r\n        );\r\n    }, [playerPosition]);\r\n\r\n    const drawGame = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas || !imagesLoaded) {\r\n            console.log('Canvas or images not ready');\r\n            return;\r\n        }\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Базовая отрисовка для проверки\r\n        ctx.fillStyle = 'red';\r\n        ctx.fillRect(50, 50, 100, 100);\r\n\r\n        // Отрисовка яблок\r\n        apples.forEach((apple) => {\r\n            const img = apple.type === 'good' ? imagesRef.current.goodApple : imagesRef.current.rottenApple;\r\n            ctx.drawImage(img, apple.x * canvas.width / 100, apple.y * canvas.height / 100, 30, 30);\r\n        });\r\n\r\n        // Отрисовка игрока\r\n        ctx.drawImage(imagesRef.current.catcher, playerPosition * canvas.width / 100 - 45, canvas.height - 90, 90, 90);\r\n\r\n        // Отрисовка счета и времени\r\n        ctx.font = '20px Arial';\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillText(`Score: ${score}`, 10, 30);\r\n        ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\r\n\r\n        console.log('Game drawn');\r\n    }, [apples, playerPosition, score, time, imagesLoaded]);\r\n\r\n    const gameLoop = useCallback((timestamp) => {\r\n        if (!lastUpdateTimeRef.current) {\r\n            lastUpdateTimeRef.current = timestamp;\r\n        }\r\n        const deltaTime = timestamp - lastUpdateTimeRef.current;\r\n        \r\n        if (deltaTime >= 33) { // Примерно 30 FPS для мобильных устройств\r\n            lastUpdateTimeRef.current = timestamp;\r\n            \r\n            setApples((prevApples) => {\r\n                const newApples = prevApples.map((apple) => ({\r\n                    ...apple,\r\n                    y: apple.y + 0.5 * (deltaTime / 33),\r\n                }));\r\n        \r\n                if (Math.random() < 0.02 && newApples.length < 4) {\r\n                    newApples.push({\r\n                        id: Date.now(),\r\n                        x: Math.random() * 100,\r\n                        y: 0,\r\n                        type: Math.random() > 0.2 ? 'good' : 'rotten',\r\n                    });\r\n                }\r\n        \r\n                return newApples.filter((apple) => apple.y < 100);\r\n            });\r\n        \r\n            checkCollisions();\r\n            drawGame();\r\n        }\r\n    \r\n        animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n    }, [checkCollisions, drawGame]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted && imagesLoaded) {\r\n            console.log('Starting game loop');\r\n            if (backgroundMusicRef.current) {\r\n                backgroundMusicRef.current.play().catch(error => {\r\n                    console.error(\"Error playing audio:\", error);\r\n                    setDebug(prev => prev + '\\nError playing audio: ' + error.message);\r\n                });\r\n            }\r\n            animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n        } else {\r\n            console.log('Stopping game loop');\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n            if (backgroundMusicRef.current) {\r\n                backgroundMusicRef.current.pause();\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        };\r\n    }, [gameStarted, gameLoop, imagesLoaded]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted && time > 0) {\r\n            const timer = setInterval(() => {\r\n                setTime((prevTime) => prevTime - 1);\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timer);\r\n        } else if (time === 0) {\r\n            endGame();\r\n        }\r\n    }, [gameStarted, time]);\r\n\r\n    const movePlayer = useCallback((e) => {\r\n        if (gameStarted) {\r\n            const touch = e.touches[0];\r\n            const newPosition = (touch.clientX / window.innerWidth) * 100;\r\n            setPlayerPosition(newPosition);\r\n        }\r\n    }, [gameStarted]);\r\n\r\n    const startGame = () => {\r\n        console.log('Starting game');\r\n        setDebug(prev => prev + '\\nStarting game');\r\n        setGameStarted(true);\r\n        setScore(0);\r\n        setTime(60);\r\n        setApples([]);\r\n        setShowResult(false);\r\n        lastUpdateTimeRef.current = 0;\r\n        if (buttonClickSoundRef.current) {\r\n            buttonClickSoundRef.current.play().catch(error => {\r\n                console.error(\"Error playing audio:\", error);\r\n                setDebug(prev => prev + '\\nError playing button click: ' + error.message);\r\n            });\r\n        }\r\n    };\r\n\r\n    const endGame = () => {\r\n        console.log('Ending game');\r\n        setDebug(prev => prev + '\\nEnding game');\r\n        setGameStarted(false);\r\n        setShowResult(true);\r\n        if (backgroundMusicRef.current) {\r\n            backgroundMusicRef.current.pause();\r\n        }\r\n    };\r\n\r\n    const handleResultClose = () => {\r\n        setShowResult(false);\r\n        onGameOver(score);\r\n        if (buttonClickSoundRef.current) {\r\n            buttonClickSoundRef.current.play().catch(error => {\r\n                console.error(\"Error playing audio:\", error);\r\n                setDebug(prev => prev + '\\nError playing button click: ' + error.message);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"apple-catcher\" onTouchMove={movePlayer}>\r\n            <canvas ref={canvasRef} style={{position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'}} />\r\n            {!imagesLoaded && <div>Loading...</div>}\r\n            {!gameStarted && !showResult && imagesLoaded && (\r\n                <button onClick={startGame} style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n                    Start Game\r\n                </button>\r\n            )}\r\n            {showResult && (\r\n                <div className=\"result-modal\">\r\n                    <div className=\"result-content\">\r\n                        <h2>Game end!</h2>\r\n                        <p>Your score: {score}</p>\r\n                        <button onClick={handleResultClose}>OK</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <pre style={{position: 'absolute', bottom: 10, left: 10, color: 'white', backgroundColor: 'rgba(0,0,0,0.5)'}}>\r\n                {debug}\r\n            </pre>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppleCatcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}