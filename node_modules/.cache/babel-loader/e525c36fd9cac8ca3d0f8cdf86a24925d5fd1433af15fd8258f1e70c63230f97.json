{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valery-sm\\\\project\\\\Demo-GWC\\\\frontend\\\\src\\\\Universes\\\\EWI\\\\src\\\\games\\\\apple-game\\\\AppleCatcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './AppleCatcher.css';\nimport goodAppleImg from './img/good-apple.png';\nimport rottenAppleImg from './img/rotten-apple.png';\nimport catcherImg from './img/catcher.png';\nimport backgroundTreeImg from './img/apple-tree.png';\nimport backgroundMusic from './audio/background-music.mp3';\nimport buttonClickSound from './audio/button-click.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppleCatcher = ({\n  onGameOver\n}) => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const canvasRef = useRef(null);\n  const applesRef = useRef([]);\n  const playerPositionRef = useRef(50);\n  const backgroundMusicRef = useRef(new Audio(backgroundMusic));\n  const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\n  const animationFrameRef = useRef(null);\n  const images = useRef({\n    goodApple: new Image(),\n    rottenApple: new Image(),\n    catcher: new Image(),\n    background: new Image()\n  });\n  useEffect(() => {\n    images.current.goodApple.src = goodAppleImg;\n    images.current.rottenApple.src = rottenAppleImg;\n    images.current.catcher.src = catcherImg;\n    images.current.background.src = backgroundTreeImg;\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    backgroundMusicRef.current.loop = true;\n    return () => {\n      backgroundMusicRef.current.pause();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n  const checkCollisions = useCallback(() => {\n    const playerWidth = 90;\n    const appleWidth = 30;\n    const collisionThreshold = (playerWidth + appleWidth) / 2;\n    applesRef.current = applesRef.current.filter(apple => {\n      const playerCenterX = playerPositionRef.current * window.innerWidth / 100;\n      const appleCenterX = apple.x * window.innerWidth / 100;\n      if (apple.y > window.innerHeight * 0.7 && apple.y < window.innerHeight * 0.85 && Math.abs(appleCenterX - playerCenterX) < collisionThreshold) {\n        const scoreChange = apple.type === 'good' ? 10 : -20;\n        setScore(prevScore => prevScore + scoreChange);\n        return false;\n      }\n      return apple.y < window.innerHeight;\n    });\n  }, []);\n  const updateGameState = useCallback(() => {\n    applesRef.current = applesRef.current.map(apple => ({\n      ...apple,\n      y: apple.y + 5\n    }));\n    if (Math.random() < 0.02 && applesRef.current.length < 5) {\n      applesRef.current.push({\n        id: Date.now(),\n        x: Math.random() * 100,\n        y: 0,\n        type: Math.random() > 0.2 ? 'good' : 'rotten'\n      });\n    }\n    checkCollisions();\n  }, [checkCollisions]);\n  const drawGame = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw background\n    ctx.drawImage(images.current.background, 0, 0, canvas.width, canvas.height);\n\n    // Draw apples\n    applesRef.current.forEach(apple => {\n      const img = apple.type === 'good' ? images.current.goodApple : images.current.rottenApple;\n      ctx.drawImage(img, apple.x * canvas.width / 100, apple.y, 30, 30);\n    });\n\n    // Draw player\n    const playerY = canvas.height * 0.85;\n    ctx.drawImage(images.current.catcher, playerPositionRef.current * canvas.width / 100 - 45, playerY - 90, 90, 90);\n\n    // Draw score and time\n    ctx.font = '20px Arial';\n    ctx.fillStyle = 'white';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\n  }, [score, time]);\n  const gameLoop = useCallback(() => {\n    if (!gameStarted) return;\n    updateGameState();\n    drawGame();\n    animationFrameRef.current = requestAnimationFrame(gameLoop);\n  }, [gameStarted, updateGameState, drawGame]);\n  useEffect(() => {\n    if (gameStarted && time > 0) {\n      const timer = setInterval(() => setTime(prevTime => prevTime - 1), 1000);\n      return () => clearInterval(timer);\n    } else if (time === 0) {\n      endGame();\n    }\n  }, [gameStarted, time]);\n  useEffect(() => {\n    if (gameStarted) {\n      backgroundMusicRef.current.play().catch(console.error);\n      animationFrameRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      backgroundMusicRef.current.pause();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    }\n  }, [gameStarted, gameLoop]);\n  const startGame = () => {\n    buttonClickSoundRef.current.play().catch(console.error);\n    setGameStarted(true);\n    setScore(0);\n    setTime(60);\n    applesRef.current = [];\n    setShowResult(false);\n  };\n  const endGame = () => {\n    setGameStarted(false);\n    setShowResult(true);\n    backgroundMusicRef.current.pause();\n  };\n  const movePlayer = useCallback(e => {\n    if (gameStarted) {\n      const touch = e.touches[0];\n      playerPositionRef.current = touch.clientX / window.innerWidth * 100;\n    }\n  }, [gameStarted]);\n  const handleResultClose = () => {\n    buttonClickSoundRef.current.play().catch(console.error);\n    setShowResult(false);\n    onGameOver(score);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apple-catcher\",\n    onTouchMove: movePlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), !gameStarted && !showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResultClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(AppleCatcher, \"mb8Ol7rSaYqy/qBbtznK2/d6NAU=\");\n_c = AppleCatcher;\nexport default AppleCatcher;\nvar _c;\n$RefreshReg$(_c, \"AppleCatcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","goodAppleImg","rottenAppleImg","catcherImg","backgroundTreeImg","backgroundMusic","buttonClickSound","jsxDEV","_jsxDEV","AppleCatcher","onGameOver","_s","score","setScore","time","setTime","gameStarted","setGameStarted","showResult","setShowResult","canvasRef","applesRef","playerPositionRef","backgroundMusicRef","Audio","buttonClickSoundRef","animationFrameRef","images","goodApple","Image","rottenApple","catcher","background","current","src","canvas","width","window","innerWidth","height","innerHeight","loop","pause","cancelAnimationFrame","checkCollisions","playerWidth","appleWidth","collisionThreshold","filter","apple","playerCenterX","appleCenterX","x","y","Math","abs","scoreChange","type","prevScore","updateGameState","map","random","length","push","id","Date","now","drawGame","ctx","getContext","clearRect","drawImage","forEach","img","playerY","font","fillStyle","fillText","gameLoop","requestAnimationFrame","timer","setInterval","prevTime","clearInterval","endGame","play","catch","console","error","startGame","movePlayer","e","touch","touches","clientX","handleResultClose","className","onTouchMove","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/valery-sm/project/Demo-GWC/frontend/src/Universes/EWI/src/games/apple-game/AppleCatcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './AppleCatcher.css';\r\nimport goodAppleImg from './img/good-apple.png';\r\nimport rottenAppleImg from './img/rotten-apple.png';\r\nimport catcherImg from './img/catcher.png';\r\nimport backgroundTreeImg from './img/apple-tree.png';\r\nimport backgroundMusic from './audio/background-music.mp3';\r\nimport buttonClickSound from './audio/button-click.mp3';\r\n\r\nconst AppleCatcher = ({ onGameOver }) => {\r\n    const [score, setScore] = useState(0);\r\n    const [time, setTime] = useState(60);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    const canvasRef = useRef(null);\r\n    const applesRef = useRef([]);\r\n    const playerPositionRef = useRef(50);\r\n    const backgroundMusicRef = useRef(new Audio(backgroundMusic));\r\n    const buttonClickSoundRef = useRef(new Audio(buttonClickSound));\r\n    const animationFrameRef = useRef(null);\r\n\r\n    const images = useRef({\r\n        goodApple: new Image(),\r\n        rottenApple: new Image(),\r\n        catcher: new Image(),\r\n        background: new Image()\r\n    });\r\n\r\n    useEffect(() => {\r\n        images.current.goodApple.src = goodAppleImg;\r\n        images.current.rottenApple.src = rottenAppleImg;\r\n        images.current.catcher.src = catcherImg;\r\n        images.current.background.src = backgroundTreeImg;\r\n\r\n        const canvas = canvasRef.current;\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        backgroundMusicRef.current.loop = true;\r\n\r\n        return () => {\r\n            backgroundMusicRef.current.pause();\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const checkCollisions = useCallback(() => {\r\n        const playerWidth = 90;\r\n        const appleWidth = 30;\r\n        const collisionThreshold = (playerWidth + appleWidth) / 2;\r\n\r\n        applesRef.current = applesRef.current.filter((apple) => {\r\n            const playerCenterX = playerPositionRef.current * window.innerWidth / 100;\r\n            const appleCenterX = apple.x * window.innerWidth / 100;\r\n\r\n            if (\r\n                apple.y > window.innerHeight * 0.7 &&\r\n                apple.y < window.innerHeight * 0.85 &&\r\n                Math.abs(appleCenterX - playerCenterX) < collisionThreshold\r\n            ) {\r\n                const scoreChange = apple.type === 'good' ? 10 : -20;\r\n                setScore(prevScore => prevScore + scoreChange);\r\n                return false;\r\n            }\r\n            return apple.y < window.innerHeight;\r\n        });\r\n    }, []);\r\n\r\n    const updateGameState = useCallback(() => {\r\n        applesRef.current = applesRef.current.map(apple => ({\r\n            ...apple,\r\n            y: apple.y + 5,\r\n        }));\r\n\r\n        if (Math.random() < 0.02 && applesRef.current.length < 5) {\r\n            applesRef.current.push({\r\n                id: Date.now(),\r\n                x: Math.random() * 100,\r\n                y: 0,\r\n                type: Math.random() > 0.2 ? 'good' : 'rotten',\r\n            });\r\n        }\r\n\r\n        checkCollisions();\r\n    }, [checkCollisions]);\r\n\r\n    const drawGame = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw background\r\n        ctx.drawImage(images.current.background, 0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw apples\r\n        applesRef.current.forEach(apple => {\r\n            const img = apple.type === 'good' ? images.current.goodApple : images.current.rottenApple;\r\n            ctx.drawImage(img, apple.x * canvas.width / 100, apple.y, 30, 30);\r\n        });\r\n\r\n        // Draw player\r\n        const playerY = canvas.height * 0.85;\r\n        ctx.drawImage(images.current.catcher, playerPositionRef.current * canvas.width / 100 - 45, playerY - 90, 90, 90);\r\n\r\n        // Draw score and time\r\n        ctx.font = '20px Arial';\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillText(`Score: ${score}`, 10, 30);\r\n        ctx.fillText(`Time: ${time}`, canvas.width - 100, 30);\r\n    }, [score, time]);\r\n\r\n    const gameLoop = useCallback(() => {\r\n        if (!gameStarted) return;\r\n\r\n        updateGameState();\r\n        drawGame();\r\n\r\n        animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n    }, [gameStarted, updateGameState, drawGame]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted && time > 0) {\r\n            const timer = setInterval(() => setTime(prevTime => prevTime - 1), 1000);\r\n            return () => clearInterval(timer);\r\n        } else if (time === 0) {\r\n            endGame();\r\n        }\r\n    }, [gameStarted, time]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted) {\r\n            backgroundMusicRef.current.play().catch(console.error);\r\n            animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n        } else {\r\n            backgroundMusicRef.current.pause();\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        }\r\n    }, [gameStarted, gameLoop]);\r\n\r\n    const startGame = () => {\r\n        buttonClickSoundRef.current.play().catch(console.error);\r\n        setGameStarted(true);\r\n        setScore(0);\r\n        setTime(60);\r\n        applesRef.current = [];\r\n        setShowResult(false);\r\n    };\r\n\r\n    const endGame = () => {\r\n        setGameStarted(false);\r\n        setShowResult(true);\r\n        backgroundMusicRef.current.pause();\r\n    };\r\n\r\n    const movePlayer = useCallback((e) => {\r\n        if (gameStarted) {\r\n            const touch = e.touches[0];\r\n            playerPositionRef.current = (touch.clientX / window.innerWidth) * 100;\r\n        }\r\n    }, [gameStarted]);\r\n\r\n    const handleResultClose = () => {\r\n        buttonClickSoundRef.current.play().catch(console.error);\r\n        setShowResult(false);\r\n        onGameOver(score);\r\n    };\r\n\r\n    return (\r\n        <div className=\"apple-catcher\" onTouchMove={movePlayer}>\r\n            <canvas ref={canvasRef} className=\"game-canvas\" />\r\n            {!gameStarted && !showResult && (\r\n                <button className=\"start-button\" onClick={startGame}>Start Game</button>\r\n            )}\r\n            {showResult && (\r\n                <div className=\"result-modal\">\r\n                    <div className=\"result-content\">\r\n                        <h2>Game Over!</h2>\r\n                        <p>Your score: {score}</p>\r\n                        <button onClick={handleResultClose}>OK</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppleCatcher;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,oBAAoB;AAC3B,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,gBAAgB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMuB,SAAS,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMsB,SAAS,GAAGtB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAMuB,iBAAiB,GAAGvB,MAAM,CAAC,EAAE,CAAC;EACpC,MAAMwB,kBAAkB,GAAGxB,MAAM,CAAC,IAAIyB,KAAK,CAACnB,eAAe,CAAC,CAAC;EAC7D,MAAMoB,mBAAmB,GAAG1B,MAAM,CAAC,IAAIyB,KAAK,CAAClB,gBAAgB,CAAC,CAAC;EAC/D,MAAMoB,iBAAiB,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAEtC,MAAM4B,MAAM,GAAG5B,MAAM,CAAC;IAClB6B,SAAS,EAAE,IAAIC,KAAK,CAAC,CAAC;IACtBC,WAAW,EAAE,IAAID,KAAK,CAAC,CAAC;IACxBE,OAAO,EAAE,IAAIF,KAAK,CAAC,CAAC;IACpBG,UAAU,EAAE,IAAIH,KAAK,CAAC;EAC1B,CAAC,CAAC;EAEF/B,SAAS,CAAC,MAAM;IACZ6B,MAAM,CAACM,OAAO,CAACL,SAAS,CAACM,GAAG,GAAGjC,YAAY;IAC3C0B,MAAM,CAACM,OAAO,CAACH,WAAW,CAACI,GAAG,GAAGhC,cAAc;IAC/CyB,MAAM,CAACM,OAAO,CAACF,OAAO,CAACG,GAAG,GAAG/B,UAAU;IACvCwB,MAAM,CAACM,OAAO,CAACD,UAAU,CAACE,GAAG,GAAG9B,iBAAiB;IAEjD,MAAM+B,MAAM,GAAGf,SAAS,CAACa,OAAO;IAChCE,MAAM,CAACC,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCH,MAAM,CAACI,MAAM,GAAGF,MAAM,CAACG,WAAW;IAElCjB,kBAAkB,CAACU,OAAO,CAACQ,IAAI,GAAG,IAAI;IAEtC,OAAO,MAAM;MACTlB,kBAAkB,CAACU,OAAO,CAACS,KAAK,CAAC,CAAC;MAClC,IAAIhB,iBAAiB,CAACO,OAAO,EAAE;QAC3BU,oBAAoB,CAACjB,iBAAiB,CAACO,OAAO,CAAC;MACnD;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,eAAe,GAAG5C,WAAW,CAAC,MAAM;IACtC,MAAM6C,WAAW,GAAG,EAAE;IACtB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,kBAAkB,GAAG,CAACF,WAAW,GAAGC,UAAU,IAAI,CAAC;IAEzDzB,SAAS,CAACY,OAAO,GAAGZ,SAAS,CAACY,OAAO,CAACe,MAAM,CAAEC,KAAK,IAAK;MACpD,MAAMC,aAAa,GAAG5B,iBAAiB,CAACW,OAAO,GAAGI,MAAM,CAACC,UAAU,GAAG,GAAG;MACzE,MAAMa,YAAY,GAAGF,KAAK,CAACG,CAAC,GAAGf,MAAM,CAACC,UAAU,GAAG,GAAG;MAEtD,IACIW,KAAK,CAACI,CAAC,GAAGhB,MAAM,CAACG,WAAW,GAAG,GAAG,IAClCS,KAAK,CAACI,CAAC,GAAGhB,MAAM,CAACG,WAAW,GAAG,IAAI,IACnCc,IAAI,CAACC,GAAG,CAACJ,YAAY,GAAGD,aAAa,CAAC,GAAGH,kBAAkB,EAC7D;QACE,MAAMS,WAAW,GAAGP,KAAK,CAACQ,IAAI,KAAK,MAAM,GAAG,EAAE,GAAG,CAAC,EAAE;QACpD5C,QAAQ,CAAC6C,SAAS,IAAIA,SAAS,GAAGF,WAAW,CAAC;QAC9C,OAAO,KAAK;MAChB;MACA,OAAOP,KAAK,CAACI,CAAC,GAAGhB,MAAM,CAACG,WAAW;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,eAAe,GAAG3D,WAAW,CAAC,MAAM;IACtCqB,SAAS,CAACY,OAAO,GAAGZ,SAAS,CAACY,OAAO,CAAC2B,GAAG,CAACX,KAAK,KAAK;MAChD,GAAGA,KAAK;MACRI,CAAC,EAAEJ,KAAK,CAACI,CAAC,GAAG;IACjB,CAAC,CAAC,CAAC;IAEH,IAAIC,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,IAAI,IAAIxC,SAAS,CAACY,OAAO,CAAC6B,MAAM,GAAG,CAAC,EAAE;MACtDzC,SAAS,CAACY,OAAO,CAAC8B,IAAI,CAAC;QACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdd,CAAC,EAAEE,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG;QACtBR,CAAC,EAAE,CAAC;QACJI,IAAI,EAAEH,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG;MACzC,CAAC,CAAC;IACN;IAEAjB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMuB,QAAQ,GAAGnE,WAAW,CAAC,MAAM;IAC/B,MAAMmC,MAAM,GAAGf,SAAS,CAACa,OAAO;IAChC,MAAMmC,GAAG,GAAGjC,MAAM,CAACkC,UAAU,CAAC,IAAI,CAAC;IAEnCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEnC,MAAM,CAACC,KAAK,EAAED,MAAM,CAACI,MAAM,CAAC;;IAEhD;IACA6B,GAAG,CAACG,SAAS,CAAC5C,MAAM,CAACM,OAAO,CAACD,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEG,MAAM,CAACC,KAAK,EAAED,MAAM,CAACI,MAAM,CAAC;;IAE3E;IACAlB,SAAS,CAACY,OAAO,CAACuC,OAAO,CAACvB,KAAK,IAAI;MAC/B,MAAMwB,GAAG,GAAGxB,KAAK,CAACQ,IAAI,KAAK,MAAM,GAAG9B,MAAM,CAACM,OAAO,CAACL,SAAS,GAAGD,MAAM,CAACM,OAAO,CAACH,WAAW;MACzFsC,GAAG,CAACG,SAAS,CAACE,GAAG,EAAExB,KAAK,CAACG,CAAC,GAAGjB,MAAM,CAACC,KAAK,GAAG,GAAG,EAAEa,KAAK,CAACI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACrE,CAAC,CAAC;;IAEF;IACA,MAAMqB,OAAO,GAAGvC,MAAM,CAACI,MAAM,GAAG,IAAI;IACpC6B,GAAG,CAACG,SAAS,CAAC5C,MAAM,CAACM,OAAO,CAACF,OAAO,EAAET,iBAAiB,CAACW,OAAO,GAAGE,MAAM,CAACC,KAAK,GAAG,GAAG,GAAG,EAAE,EAAEsC,OAAO,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;IAEhH;IACAN,GAAG,CAACO,IAAI,GAAG,YAAY;IACvBP,GAAG,CAACQ,SAAS,GAAG,OAAO;IACvBR,GAAG,CAACS,QAAQ,CAAC,UAAUjE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCwD,GAAG,CAACS,QAAQ,CAAC,SAAS/D,IAAI,EAAE,EAAEqB,MAAM,CAACC,KAAK,GAAG,GAAG,EAAE,EAAE,CAAC;EACzD,CAAC,EAAE,CAACxB,KAAK,EAAEE,IAAI,CAAC,CAAC;EAEjB,MAAMgE,QAAQ,GAAG9E,WAAW,CAAC,MAAM;IAC/B,IAAI,CAACgB,WAAW,EAAE;IAElB2C,eAAe,CAAC,CAAC;IACjBQ,QAAQ,CAAC,CAAC;IAEVzC,iBAAiB,CAACO,OAAO,GAAG8C,qBAAqB,CAACD,QAAQ,CAAC;EAC/D,CAAC,EAAE,CAAC9D,WAAW,EAAE2C,eAAe,EAAEQ,QAAQ,CAAC,CAAC;EAE5CrE,SAAS,CAAC,MAAM;IACZ,IAAIkB,WAAW,IAAIF,IAAI,GAAG,CAAC,EAAE;MACzB,MAAMkE,KAAK,GAAGC,WAAW,CAAC,MAAMlE,OAAO,CAACmE,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MACxE,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;IACrC,CAAC,MAAM,IAAIlE,IAAI,KAAK,CAAC,EAAE;MACnBsE,OAAO,CAAC,CAAC;IACb;EACJ,CAAC,EAAE,CAACpE,WAAW,EAAEF,IAAI,CAAC,CAAC;EAEvBhB,SAAS,CAAC,MAAM;IACZ,IAAIkB,WAAW,EAAE;MACbO,kBAAkB,CAACU,OAAO,CAACoD,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;MACtD9D,iBAAiB,CAACO,OAAO,GAAG8C,qBAAqB,CAACD,QAAQ,CAAC;IAC/D,CAAC,MAAM;MACHvD,kBAAkB,CAACU,OAAO,CAACS,KAAK,CAAC,CAAC;MAClC,IAAIhB,iBAAiB,CAACO,OAAO,EAAE;QAC3BU,oBAAoB,CAACjB,iBAAiB,CAACO,OAAO,CAAC;MACnD;IACJ;EACJ,CAAC,EAAE,CAACjB,WAAW,EAAE8D,QAAQ,CAAC,CAAC;EAE3B,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACpBhE,mBAAmB,CAACQ,OAAO,CAACoD,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACvDvE,cAAc,CAAC,IAAI,CAAC;IACpBJ,QAAQ,CAAC,CAAC,CAAC;IACXE,OAAO,CAAC,EAAE,CAAC;IACXM,SAAS,CAACY,OAAO,GAAG,EAAE;IACtBd,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMiE,OAAO,GAAGA,CAAA,KAAM;IAClBnE,cAAc,CAAC,KAAK,CAAC;IACrBE,aAAa,CAAC,IAAI,CAAC;IACnBI,kBAAkB,CAACU,OAAO,CAACS,KAAK,CAAC,CAAC;EACtC,CAAC;EAED,MAAMgD,UAAU,GAAG1F,WAAW,CAAE2F,CAAC,IAAK;IAClC,IAAI3E,WAAW,EAAE;MACb,MAAM4E,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;MAC1BvE,iBAAiB,CAACW,OAAO,GAAI2D,KAAK,CAACE,OAAO,GAAGzD,MAAM,CAACC,UAAU,GAAI,GAAG;IACzE;EACJ,CAAC,EAAE,CAACtB,WAAW,CAAC,CAAC;EAEjB,MAAM+E,iBAAiB,GAAGA,CAAA,KAAM;IAC5BtE,mBAAmB,CAACQ,OAAO,CAACoD,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACvDrE,aAAa,CAAC,KAAK,CAAC;IACpBT,UAAU,CAACE,KAAK,CAAC;EACrB,CAAC;EAED,oBACIJ,OAAA;IAAKwF,SAAS,EAAC,eAAe;IAACC,WAAW,EAAEP,UAAW;IAAAQ,QAAA,gBACnD1F,OAAA;MAAQ2F,GAAG,EAAE/E,SAAU;MAAC4E,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjD,CAACvF,WAAW,IAAI,CAACE,UAAU,iBACxBV,OAAA;MAAQwF,SAAS,EAAC,cAAc;MAACQ,OAAO,EAAEf,SAAU;MAAAS,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1E,EACArF,UAAU,iBACPV,OAAA;MAAKwF,SAAS,EAAC,cAAc;MAAAE,QAAA,eACzB1F,OAAA;QAAKwF,SAAS,EAAC,gBAAgB;QAAAE,QAAA,gBAC3B1F,OAAA;UAAA0F,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnB/F,OAAA;UAAA0F,QAAA,GAAG,cAAY,EAACtF,KAAK;QAAA;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B/F,OAAA;UAAQgG,OAAO,EAAET,iBAAkB;UAAAG,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5F,EAAA,CArLIF,YAAY;AAAAgG,EAAA,GAAZhG,YAAY;AAuLlB,eAAeA,YAAY;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}